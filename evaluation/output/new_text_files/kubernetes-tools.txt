[Service Account]: elasticsearch
  [Resource] (ResourceName/ResourceType): elasticsearch/Deployment

  [Permissions]:
    [clusterPermissions]: [
    {
        "verbs": "get",
        "Resources": "endpoints,namespaces,services",
        "API groups": ""
    }
]
    [cluster role over-privileged permissions]: [] 

    [rolePermissions] (default): []
    [role over-privileged permissions]: [] 

  [Role Details]:
    [clusterRoles]: [elasticsearch] [Main configs]
    [clusterRoleBindings]: [ServiceAccount/elasticsearch] [Main configs]

    [roles]: [] []
    [roleBindings]: [] []
-------------------------------------------

[Service Account]: argocd-dex-server
  [Resource] (ResourceName/ResourceType): argocd-dex-server/Deployment

  [Permissions]:
    [clusterPermissions]: []
    [cluster role over-privileged permissions]: [] 

    [rolePermissions] (default): [
    {
        "verbs": "list,watch,get",
        "Resources": "configmaps,secrets",
        "API groups": "core"
    }
]
    [role over-privileged permissions]: [
    {
        "verbs": "list",
        "Resources": "secrets",
        "API groups": "core"
    },
    {
        "verbs": "get",
        "Resources": "secrets",
        "API groups": "core"
    },
    {
        "verbs": "watch",
        "Resources": "secrets",
        "API groups": "core"
    }
]

  [Role Details]:
    [clusterRoles]: [] []
    [clusterRoleBindings]: [] []

    [roles]: [argocd-dex-server] [Main configs]
    [roleBindings]: [ServiceAccount/argocd-dex-server] [Main configs]
-------------------------------------------

[Service Account]: release-name-stolon
  [Resource] (ResourceName/ResourceType): release-name-stolon-proxy/Deployment

  [Permissions]:
    [clusterPermissions]: []
    [cluster role over-privileged permissions]: [] 

    [rolePermissions] (default): [
    {
        "verbs": "*",
        "Resources": "endpoints,configmaps,pods",
        "API groups": "core"
    }
]
    [role over-privileged permissions]: [
    {
        "verbs": "*",
        "Resources": "pods",
        "API groups": "core"
    }
]

  [Role Details]:
    [clusterRoles]: [] []
    [clusterRoleBindings]: [] []

    [roles]: [release-name-stolon] [Main configs]
    [roleBindings]: [ServiceAccount/release-name-stolon] [Main configs]
-------------------------------------------

  [Resource] (ResourceName/ResourceType): release-name-stolon-sentinel/Deployment

  [Permissions]:
    [clusterPermissions]: []
    [cluster role over-privileged permissions]: [] 

    [rolePermissions] (default): [
    {
        "verbs": "*",
        "Resources": "endpoints,configmaps,pods",
        "API groups": "core"
    }
]
    [role over-privileged permissions]: [
    {
        "verbs": "*",
        "Resources": "pods",
        "API groups": "core"
    }
]

  [Role Details]:
    [clusterRoles]: [] []
    [clusterRoleBindings]: [] []

    [roles]: [release-name-stolon] [Main configs]
    [roleBindings]: [ServiceAccount/release-name-stolon] [Main configs]
-------------------------------------------

  [Resource] (ResourceName/ResourceType): release-name-stolon-keeper/StatefulSet

  [Permissions]:
    [clusterPermissions]: []
    [cluster role over-privileged permissions]: [] 

    [rolePermissions] (default): [
    {
        "verbs": "*",
        "Resources": "endpoints,configmaps,pods",
        "API groups": "core"
    }
]
    [role over-privileged permissions]: [
    {
        "verbs": "*",
        "Resources": "pods",
        "API groups": "core"
    }
]

  [Role Details]:
    [clusterRoles]: [] []
    [clusterRoleBindings]: [] []

    [roles]: [release-name-stolon] [Main configs]
    [roleBindings]: [ServiceAccount/release-name-stolon] [Main configs]
-------------------------------------------

[Service Account]: release-name-prometheus-kube-state-metrics
  [Resource] (ResourceName/ResourceType): release-name-prometheus-kube-state-metrics/Deployment

  [Permissions]:
    [clusterPermissions]: [
    {
        "verbs": "list,watch,get",
        "Resources": "statefulsets",
        "API groups": "apps"
    },
    {
        "verbs": "list,watch",
        "Resources": "deployments,replicasets,daemonsets",
        "API groups": "extensions"
    },
    {
        "verbs": "list,watch",
        "Resources": "horizontalpodautoscalers",
        "API groups": "autoscaling"
    },
    {
        "verbs": "list,watch",
        "Resources": "jobs,cronjobs",
        "API groups": "batch"
    },
    {
        "verbs": "list,watch",
        "Resources": "resourcequotas,endpoints,pods,limitranges,replicationcontrollers,nodes,persistentvolumeclaims,services,persistentvolumes,configmaps,namespaces,secrets",
        "API groups": ""
    }
]
    [cluster role over-privileged permissions]: [
    {
        "verbs": "watch",
        "Resources": "secrets",
        "API groups": ""
    },
    {
        "verbs": "list",
        "Resources": "secrets",
        "API groups": ""
    }
]

    [rolePermissions] (default): []
    [role over-privileged permissions]: [] 

  [Role Details]:
    [clusterRoles]: [release-name-prometheus-kube-state-metrics] [Main configs]
    [clusterRoleBindings]: [ServiceAccount/release-name-prometheus-kube-state-metrics] [Main configs]

    [roles]: [] []
    [roleBindings]: [] []
-------------------------------------------

[Service Account]: nfs-provisioner
  [Resource] (ResourceName/ResourceType): active/default

  [Permissions]:
    [clusterPermissions]: [
    {
        "verbs": "get",
        "Resources": "endpoints,services",
        "API groups": ""
    },
    {
        "verbs": "list,get,create,watch,delete",
        "Resources": "persistentvolumes",
        "API groups": ""
    },
    {
        "verbs": "list,watch,get",
        "Resources": "storageclasses",
        "API groups": "storage.k8s.io"
    },
    {
        "verbs": "patch,create,update",
        "Resources": "events",
        "API groups": ""
    },
    {
        "verbs": "update,list,watch,get",
        "Resources": "persistentvolumeclaims",
        "API groups": ""
    },
    {
        "verbs": "use",
        "Resources": "podsecuritypolicies",
        "API groups": "extensions"
    }
]
    [cluster role over-privileged permissions]: [] 

    [rolePermissions] (default): [
    {
        "verbs": "list,patch,update,get,create,watch",
        "Resources": "endpoints",
        "API groups": "core"
    }
]
    [role over-privileged permissions]: [] 

  [Role Details]:
    [clusterRoles]: [nfs-provisioner-runner] [Main configs]
    [clusterRoleBindings]: [ServiceAccount/nfs-provisioner] [Main configs]

    [roles]: [leader-locking-nfs-provisioner] [Main configs]
    [roleBindings]: [ServiceAccount/nfs-provisioner] [Main configs]
    [clusterResourceNames]: nfs-provisioner
-------------------------------------------

[Service Account]: istio-ingressgateway-service-account
  [Resource] (ResourceName/ResourceType): istio-ingressgateway/Deployment

  [Permissions]:
    [clusterPermissions]: [
    {
        "verbs": "update,list,watch,get",
        "Resources": "gateways,destinationrules,thirdpartyresources,virtualservices",
        "API groups": "extensions"
    }
]
    [cluster role over-privileged permissions]: [] 

    [rolePermissions] (default): []
    [role over-privileged permissions]: [] 

  [Role Details]:
    [clusterRoles]: [istio-ingressgateway-istio-system] [Example configs]
    [clusterRoleBindings]: [ServiceAccount/istio-ingressgateway-service-account] [Main configs; Example configs]

    [roles]: [] []
    [roleBindings]: [] []
-------------------------------------------

[Service Account]: argocd-redis
  [Resource] (ResourceName/ResourceType): argocd-redis/Deployment

  [Permissions]:
    [clusterPermissions]: []
    [cluster role over-privileged permissions]: [] 

    [rolePermissions] (default): [
    {
        "verbs": "use",
        "Resources": "securitycontextconstraints",
        "API groups": "security.openshift.io"
    }
]
    [role over-privileged permissions]: [] 

  [Role Details]:
    [clusterRoles]: [] []
    [clusterRoleBindings]: [] []

    [roles]: [argocd-redis] [Main configs]
    [roleBindings]: [ServiceAccount/argocd-redis] [Main configs]
    [roleResourceNames]: nonroot
-------------------------------------------

[Service Account]: hub
  [Resource] (ResourceName/ResourceType): hub/Deployment

  [Permissions]:
    [clusterPermissions]: []
    [cluster role over-privileged permissions]: [] 

    [rolePermissions] (default): [
    {
        "verbs": "list,get,create,watch,delete",
        "Resources": "persistentvolumeclaims,pods",
        "API groups": "core"
    },
    {
        "verbs": "list,watch,get",
        "Resources": "events",
        "API groups": "core"
    }
]
    [role over-privileged permissions]: [
    {
        "verbs": "create",
        "Resources": "pods",
        "API groups": "core"
    }
]

  [Role Details]:
    [clusterRoles]: [] []
    [clusterRoleBindings]: [] []

    [roles]: [hub] [Main configs]
    [roleBindings]: [ServiceAccount/hub] [Main configs]
-------------------------------------------

[Service Account]: istio-multi
  [Resource] (ResourceName/ResourceType): active/default

  [Permissions]:
    [clusterPermissions]: [
    {
        "verbs": "list,watch,get",
        "Resources": "services,endpoints,nodes,pods",
        "API groups": ""
    }
]
    [cluster role over-privileged permissions]: [] 

    [rolePermissions] (default): []
    [role over-privileged permissions]: [] 

  [Role Details]:
    [clusterRoles]: [istio-reader] [Main configs]
    [clusterRoleBindings]: [ServiceAccount/istio-multi] [Main configs]

    [roles]: [] []
    [roleBindings]: [] []
-------------------------------------------

[Service Account]: tiller
  [Resource] (ResourceName/ResourceType): active/default

  [Permissions]:
    [clusterPermissions]: []
    [cluster role over-privileged permissions]: [] 

    [rolePermissions] (default): []
    [role over-privileged permissions]: [] 

  [Role Details]:
    [clusterRoles]: [cluster-admin] []
    [clusterRoleBindings]: [ServiceAccount/tiller] [Main configs]

    [roles]: [] []
    [roleBindings]: [] []
-------------------------------------------

[Service Account]: heapster
  [Resource] (ResourceName/ResourceType): heapster/Deployment

  [Permissions]:
    [clusterPermissions]: []
    [cluster role over-privileged permissions]: [] 

    [rolePermissions] (default): []
    [role over-privileged permissions]: [] 

  [Role Details]:
    [clusterRoles]: [system:heapster] []
    [clusterRoleBindings]: [ServiceAccount/heapster] [Main configs]

    [roles]: [] []
    [roleBindings]: [] []
-------------------------------------------

[Service Account]: release-name-nginx-ingress
  [Resource] (ResourceName/ResourceType): release-name-nginx-ingress-controller/Deployment

  [Permissions]:
    [clusterPermissions]: [
    {
        "verbs": "get",
        "Resources": "nodes",
        "API groups": ""
    },
    {
        "verbs": "list,watch,get",
        "Resources": "ingresses",
        "API groups": "extensions"
    },
    {
        "verbs": "list,watch",
        "Resources": "endpoints,pods,configmaps,nodes,secrets",
        "API groups": ""
    },
    {
        "verbs": "patch,create",
        "Resources": "events",
        "API groups": ""
    },
    {
        "verbs": "update",
        "Resources": "ingresses/status",
        "API groups": "extensions"
    },
    {
        "verbs": "watch,list,update,get",
        "Resources": "services",
        "API groups": ""
    }
]
    [cluster role over-privileged permissions]: [
    {
        "verbs": "watch",
        "Resources": "secrets",
        "API groups": ""
    },
    {
        "verbs": "list",
        "Resources": "secrets",
        "API groups": ""
    }
]

    [rolePermissions] (default): [
    {
        "verbs": "create,update,get",
        "Resources": "endpoints",
        "API groups": "core"
    },
    {
        "verbs": "create",
        "Resources": "configmaps",
        "API groups": "core"
    },
    {
        "verbs": "get",
        "Resources": "namespaces",
        "API groups": "core"
    },
    {
        "verbs": "list,watch,get",
        "Resources": "endpoints,configmaps,secrets,pods",
        "API groups": "core"
    },
    {
        "verbs": "list,watch,get",
        "Resources": "ingresses",
        "API groups": "extensions"
    },
    {
        "verbs": "patch,create",
        "Resources": "events",
        "API groups": "core"
    },
    {
        "verbs": "update,get",
        "Resources": "configmaps",
        "API groups": "core"
    },
    {
        "verbs": "update",
        "Resources": "ingresses/status",
        "API groups": "extensions"
    },
    {
        "verbs": "watch,list,update,get",
        "Resources": "services",
        "API groups": "core"
    }
]
    [role over-privileged permissions]: [
    {
        "verbs": "list",
        "Resources": "secrets",
        "API groups": "core"
    },
    {
        "verbs": "get",
        "Resources": "secrets",
        "API groups": "core"
    },
    {
        "verbs": "watch",
        "Resources": "secrets",
        "API groups": "core"
    }
]

  [Role Details]:
    [clusterRoles]: [release-name-nginx-ingress] [Main configs]
    [clusterRoleBindings]: [ServiceAccount/release-name-nginx-ingress] [Main configs]

    [roles]: [release-name-nginx-ingress] [Main configs]
    [roleBindings]: [ServiceAccount/release-name-nginx-ingress] [Main configs]
    [roleResourceNames]: ingress-controller-leader-nginx
-------------------------------------------

[Service Account]: istio-mixer-service-account
  [Resource] (ResourceName/ResourceType): istio-statsd-prom-bridge/Deployment

  [Permissions]:
    [clusterPermissions]: [
    {
        "verbs": "list,patch,get,create,watch",
        "Resources": "*",
        "API groups": "config.istio.io"
    },
    {
        "verbs": "list,watch,get",
        "Resources": "*",
        "API groups": "rbac.istio.io"
    },
    {
        "verbs": "list,watch,get",
        "Resources": "customresourcedefinitions",
        "API groups": "apiextensions.k8s.io"
    },
    {
        "verbs": "list,watch,get",
        "Resources": "endpoints,pods,configmaps,services,namespaces,secrets",
        "API groups": ""
    },
    {
        "verbs": "list,watch,get",
        "Resources": "replicasets",
        "API groups": "apps"
    },
    {
        "verbs": "list,watch,get",
        "Resources": "replicasets",
        "API groups": "extensions"
    }
]
    [cluster role over-privileged permissions]: [
    {
        "verbs": "get",
        "Resources": "secrets",
        "API groups": ""
    },
    {
        "verbs": "watch",
        "Resources": "secrets",
        "API groups": ""
    },
    {
        "verbs": "list",
        "Resources": "secrets",
        "API groups": ""
    }
]

    [rolePermissions] (default): []
    [role over-privileged permissions]: [] 

  [Role Details]:
    [clusterRoles]: [istio-mixer-istio-system] [Example configs]
    [clusterRoleBindings]: [ServiceAccount/istio-mixer-service-account] [Main configs; Example configs]

    [roles]: [] []
    [roleBindings]: [] []
-------------------------------------------

  [Resource] (ResourceName/ResourceType): istio-policy/Deployment

  [Permissions]:
    [clusterPermissions]: [
    {
        "verbs": "list,patch,get,create,watch",
        "Resources": "*",
        "API groups": "config.istio.io"
    },
    {
        "verbs": "list,watch,get",
        "Resources": "*",
        "API groups": "rbac.istio.io"
    },
    {
        "verbs": "list,watch,get",
        "Resources": "customresourcedefinitions",
        "API groups": "apiextensions.k8s.io"
    },
    {
        "verbs": "list,watch,get",
        "Resources": "endpoints,pods,configmaps,services,namespaces,secrets",
        "API groups": ""
    },
    {
        "verbs": "list,watch,get",
        "Resources": "replicasets",
        "API groups": "apps"
    },
    {
        "verbs": "list,watch,get",
        "Resources": "replicasets",
        "API groups": "extensions"
    }
]
    [cluster role over-privileged permissions]: [
    {
        "verbs": "get",
        "Resources": "secrets",
        "API groups": ""
    },
    {
        "verbs": "watch",
        "Resources": "secrets",
        "API groups": ""
    },
    {
        "verbs": "list",
        "Resources": "secrets",
        "API groups": ""
    }
]

    [rolePermissions] (default): []
    [role over-privileged permissions]: [] 

  [Role Details]:
    [clusterRoles]: [istio-mixer-istio-system] [Example configs]
    [clusterRoleBindings]: [ServiceAccount/istio-mixer-service-account] [Main configs; Example configs]

    [roles]: [] []
    [roleBindings]: [] []
-------------------------------------------

  [Resource] (ResourceName/ResourceType): istio-telemetry/Deployment

  [Permissions]:
    [clusterPermissions]: [
    {
        "verbs": "list,patch,get,create,watch",
        "Resources": "*",
        "API groups": "config.istio.io"
    },
    {
        "verbs": "list,watch,get",
        "Resources": "*",
        "API groups": "rbac.istio.io"
    },
    {
        "verbs": "list,watch,get",
        "Resources": "customresourcedefinitions",
        "API groups": "apiextensions.k8s.io"
    },
    {
        "verbs": "list,watch,get",
        "Resources": "endpoints,pods,configmaps,services,namespaces,secrets",
        "API groups": ""
    },
    {
        "verbs": "list,watch,get",
        "Resources": "replicasets",
        "API groups": "apps"
    },
    {
        "verbs": "list,watch,get",
        "Resources": "replicasets",
        "API groups": "extensions"
    }
]
    [cluster role over-privileged permissions]: [
    {
        "verbs": "get",
        "Resources": "secrets",
        "API groups": ""
    },
    {
        "verbs": "watch",
        "Resources": "secrets",
        "API groups": ""
    },
    {
        "verbs": "list",
        "Resources": "secrets",
        "API groups": ""
    }
]

    [rolePermissions] (default): []
    [role over-privileged permissions]: [] 

  [Role Details]:
    [clusterRoles]: [istio-mixer-istio-system] [Example configs]
    [clusterRoleBindings]: [ServiceAccount/istio-mixer-service-account] [Main configs; Example configs]

    [roles]: [] []
    [roleBindings]: [] []
-------------------------------------------

[Service Account]: flannel
  [Resource] (ResourceName/ResourceType): kube-flannel-ds-amd64/DaemonSet

  [Permissions]:
    [clusterPermissions]: [
    {
        "verbs": "get",
        "Resources": "pods",
        "API groups": ""
    },
    {
        "verbs": "list,watch",
        "Resources": "nodes",
        "API groups": ""
    },
    {
        "verbs": "patch",
        "Resources": "nodes/status",
        "API groups": ""
    }
]
    [cluster role over-privileged permissions]: [] 

    [rolePermissions] (default): []
    [role over-privileged permissions]: [] 

  [Role Details]:
    [clusterRoles]: [flannel] [Main configs]
    [clusterRoleBindings]: [ServiceAccount/flannel] [Main configs]

    [roles]: [] []
    [roleBindings]: [] []
-------------------------------------------

  [Resource] (ResourceName/ResourceType): kube-flannel-ds-arm64/DaemonSet

  [Permissions]:
    [clusterPermissions]: [
    {
        "verbs": "get",
        "Resources": "pods",
        "API groups": ""
    },
    {
        "verbs": "list,watch",
        "Resources": "nodes",
        "API groups": ""
    },
    {
        "verbs": "patch",
        "Resources": "nodes/status",
        "API groups": ""
    }
]
    [cluster role over-privileged permissions]: [] 

    [rolePermissions] (default): []
    [role over-privileged permissions]: [] 

  [Role Details]:
    [clusterRoles]: [flannel] [Main configs]
    [clusterRoleBindings]: [ServiceAccount/flannel] [Main configs]

    [roles]: [] []
    [roleBindings]: [] []
-------------------------------------------

  [Resource] (ResourceName/ResourceType): kube-flannel-ds-arm/DaemonSet

  [Permissions]:
    [clusterPermissions]: [
    {
        "verbs": "get",
        "Resources": "pods",
        "API groups": ""
    },
    {
        "verbs": "list,watch",
        "Resources": "nodes",
        "API groups": ""
    },
    {
        "verbs": "patch",
        "Resources": "nodes/status",
        "API groups": ""
    }
]
    [cluster role over-privileged permissions]: [] 

    [rolePermissions] (default): []
    [role over-privileged permissions]: [] 

  [Role Details]:
    [clusterRoles]: [flannel] [Main configs]
    [clusterRoleBindings]: [ServiceAccount/flannel] [Main configs]

    [roles]: [] []
    [roleBindings]: [] []
-------------------------------------------

  [Resource] (ResourceName/ResourceType): kube-flannel-ds-ppc64le/DaemonSet

  [Permissions]:
    [clusterPermissions]: [
    {
        "verbs": "get",
        "Resources": "pods",
        "API groups": ""
    },
    {
        "verbs": "list,watch",
        "Resources": "nodes",
        "API groups": ""
    },
    {
        "verbs": "patch",
        "Resources": "nodes/status",
        "API groups": ""
    }
]
    [cluster role over-privileged permissions]: [] 

    [rolePermissions] (default): []
    [role over-privileged permissions]: [] 

  [Role Details]:
    [clusterRoles]: [flannel] [Main configs]
    [clusterRoleBindings]: [ServiceAccount/flannel] [Main configs]

    [roles]: [] []
    [roleBindings]: [] []
-------------------------------------------

  [Resource] (ResourceName/ResourceType): kube-flannel-ds-s390x/DaemonSet

  [Permissions]:
    [clusterPermissions]: [
    {
        "verbs": "get",
        "Resources": "pods",
        "API groups": ""
    },
    {
        "verbs": "list,watch",
        "Resources": "nodes",
        "API groups": ""
    },
    {
        "verbs": "patch",
        "Resources": "nodes/status",
        "API groups": ""
    }
]
    [cluster role over-privileged permissions]: [] 

    [rolePermissions] (default): []
    [role over-privileged permissions]: [] 

  [Role Details]:
    [clusterRoles]: [flannel] [Main configs]
    [clusterRoleBindings]: [ServiceAccount/flannel] [Main configs]

    [roles]: [] []
    [roleBindings]: [] []
-------------------------------------------

[Service Account]: istio-egressgateway-service-account
  [Resource] (ResourceName/ResourceType): istio-egressgateway/Deployment

  [Permissions]:
    [clusterPermissions]: [
    {
        "verbs": "update,list,watch,get",
        "Resources": "gateways,destinationrules,thirdpartyresources,virtualservices",
        "API groups": "extensions"
    }
]
    [cluster role over-privileged permissions]: [] 

    [rolePermissions] (default): []
    [role over-privileged permissions]: [] 

  [Role Details]:
    [clusterRoles]: [istio-egressgateway-istio-system] [Example configs]
    [clusterRoleBindings]: [ServiceAccount/istio-egressgateway-service-account] [Main configs; Example configs]

    [roles]: [] []
    [roleBindings]: [] []
-------------------------------------------

[Service Account]: istio-galley-service-account
  [Resource] (ResourceName/ResourceType): istio-galley/Deployment

  [Permissions]:
    [clusterPermissions]: [
    {
        "verbs": "*",
        "Resources": "validatingwebhookconfigurations",
        "API groups": "admissionregistration.k8s.io"
    },
    {
        "verbs": "get",
        "Resources": "deployments",
        "API groups": "*"
    },
    {
        "verbs": "list,watch,get",
        "Resources": "*",
        "API groups": "config.istio.io"
    }
]
    [cluster role over-privileged permissions]: [] 

    [rolePermissions] (default): []
    [role over-privileged permissions]: [] 

  [Role Details]:
    [clusterRoles]: [istio-galley-istio-system] [Example configs]
    [clusterRoleBindings]: [ServiceAccount/istio-galley-service-account] [Main configs; Example configs]

    [roles]: [] []
    [roleBindings]: [] []
    [clusterResourceNames]: istio-galley
-------------------------------------------

[Service Account]: argocd-application-controller
  [Resource] (ResourceName/ResourceType): argocd-application-controller/StatefulSet

  [Permissions]:
    [clusterPermissions]: [
    {
        "verbs": "*",
        "Resources": "*",
        "API groups": "*"
    },
    {
        "verbs": "*",
        "Resources": "",
        "API groups": "core"
    }
]
    [cluster role over-privileged permissions]: [] 

    [rolePermissions] (default): [
    {
        "verbs": "list,create",
        "Resources": "events",
        "API groups": "core"
    },
    {
        "verbs": "list,patch,update,get,create,watch,delete",
        "Resources": "applications,appprojects",
        "API groups": "argoproj.io"
    },
    {
        "verbs": "list,watch,get",
        "Resources": "configmaps,secrets",
        "API groups": "core"
    }
]
    [role over-privileged permissions]: [
    {
        "verbs": "list",
        "Resources": "secrets",
        "API groups": "core"
    },
    {
        "verbs": "get",
        "Resources": "secrets",
        "API groups": "core"
    },
    {
        "verbs": "watch",
        "Resources": "secrets",
        "API groups": "core"
    }
]

  [Role Details]:
    [clusterRoles]: [argocd-application-controller] [Main configs]
    [clusterRoleBindings]: [ServiceAccount/argocd-application-controller] [Main configs]

    [roles]: [argocd-application-controller] [Main configs]
    [roleBindings]: [ServiceAccount/argocd-application-controller] [Main configs]
-------------------------------------------

[Service Account]: istio-sidecar-injector-service-account
  [Resource] (ResourceName/ResourceType): istio-sidecar-injector/Deployment

  [Permissions]:
    [clusterPermissions]: [
    {
        "verbs": "list,patch,watch,get",
        "Resources": "mutatingwebhookconfigurations",
        "API groups": "admissionregistration.k8s.io"
    },
    {
        "verbs": "list,watch,get",
        "Resources": "configmaps",
        "API groups": "*"
    }
]
    [cluster role over-privileged permissions]: [] 

    [rolePermissions] (default): []
    [role over-privileged permissions]: [] 

  [Role Details]:
    [clusterRoles]: [istio-sidecar-injector-default; istio-sidecar-injector-istio-system] [Example configs; Main configs]
    [clusterRoleBindings]: [ServiceAccount/istio-sidecar-injector-service-account] [Main configs; Example configs]

    [roles]: [] []
    [roleBindings]: [] []
-------------------------------------------

[Service Account]: istio-cleanup-secrets-service-account
  [Resource] (ResourceName/ResourceType): active/default

  [Permissions]:
    [clusterPermissions]: [
    {
        "verbs": "list,delete",
        "Resources": "secrets",
        "API groups": ""
    }
]
    [cluster role over-privileged permissions]: [
    {
        "verbs": "list",
        "Resources": "secrets",
        "API groups": ""
    }
]

    [rolePermissions] (default): []
    [role over-privileged permissions]: [] 

  [Role Details]:
    [clusterRoles]: [istio-cleanup-secrets-default; istio-cleanup-secrets-istio-system] [Example configs; Main configs]
    [clusterRoleBindings]: [ServiceAccount/istio-cleanup-secrets-service-account] [Main configs; Example configs]

    [roles]: [] []
    [roleBindings]: [] []
-------------------------------------------

[Service Account]: argocd-server
  [Resource] (ResourceName/ResourceType): argocd-server/Deployment

  [Permissions]:
    [clusterPermissions]: [
    {
        "verbs": "get",
        "Resources": "pods/log,pods",
        "API groups": ""
    },
    {
        "verbs": "list",
        "Resources": "events",
        "API groups": ""
    },
    {
        "verbs": "patch,delete,get",
        "Resources": "*",
        "API groups": "*"
    }
]
    [cluster role over-privileged permissions]: [
    {
        "verbs": "get",
        "Resources": "*",
        "API groups": "*"
    }
]

    [rolePermissions] (default): [
    {
        "verbs": "list,create",
        "Resources": "events",
        "API groups": "core"
    },
    {
        "verbs": "list,patch,update,get,create,watch,delete",
        "Resources": "applications,appprojects",
        "API groups": "argoproj.io"
    },
    {
        "verbs": "list,patch,update,get,create,watch,delete",
        "Resources": "configmaps,secrets",
        "API groups": "core"
    }
]
    [role over-privileged permissions]: [
    {
        "verbs": "patch",
        "Resources": "secrets",
        "API groups": "core"
    },
    {
        "verbs": "get",
        "Resources": "secrets",
        "API groups": "core"
    },
    {
        "verbs": "list",
        "Resources": "secrets",
        "API groups": "core"
    },
    {
        "verbs": "update",
        "Resources": "secrets",
        "API groups": "core"
    },
    {
        "verbs": "watch",
        "Resources": "secrets",
        "API groups": "core"
    }
]

  [Role Details]:
    [clusterRoles]: [argocd-server] [Main configs]
    [clusterRoleBindings]: [ServiceAccount/argocd-server] [Main configs]

    [roles]: [argocd-server] [Main configs]
    [roleBindings]: [ServiceAccount/argocd-server] [Main configs]
-------------------------------------------

[Service Account]: istio-grafana-post-install-account
  [Resource] (ResourceName/ResourceType): active/default

  [Permissions]:
    [clusterPermissions]: [
    {
        "verbs": "*",
        "Resources": "*",
        "API groups": "authentication.istio.io"
    }
]
    [cluster role over-privileged permissions]: [] 

    [rolePermissions] (default): []
    [role over-privileged permissions]: [] 

  [Role Details]:
    [clusterRoles]: [istio-grafana-post-install-istio-system] [Example configs]
    [clusterRoleBindings]: [ServiceAccount/istio-grafana-post-install-account] [Example configs]

    [roles]: [] []
    [roleBindings]: [] []
-------------------------------------------

[Service Account]: metrics-server
  [Resource] (ResourceName/ResourceType): metrics-server/Deployment

  [Permissions]:
    [clusterPermissions]: [
    {
        "verbs": "list,watch,get",
        "Resources": "deployments",
        "API groups": "extensions"
    },
    {
        "verbs": "list,watch,get",
        "Resources": "nodes,pods,nodes/stats,namespaces",
        "API groups": ""
    }
]
    [cluster role over-privileged permissions]: [] 

    [rolePermissions] (kube-system): []
    [role over-privileged permissions]: [] 

  [Role Details]:
    [clusterRoles]: [system:auth-delegator; system:metrics-server] [Main configs]
    [clusterRoleBindings]: [ServiceAccount/metrics-server] [Main configs]

    [roles]: [extension-apiserver-authentication-reader] []
    [roleBindings]: [ServiceAccount/metrics-server] [Main configs]
-------------------------------------------

[Service Account]: hook-image-awaiter
  [Resource] (ResourceName/ResourceType): active/default

  [Permissions]:
    [clusterPermissions]: []
    [cluster role over-privileged permissions]: [] 

    [rolePermissions] (default): [
    {
        "verbs": "get",
        "Resources": "daemonsets",
        "API groups": "apps"
    }
]
    [role over-privileged permissions]: [] 

  [Role Details]:
    [clusterRoles]: [] []
    [clusterRoleBindings]: [] []

    [roles]: [hook-image-awaiter] [Main configs]
    [roleBindings]: [ServiceAccount/hook-image-awaiter] [Main configs]
-------------------------------------------

[Service Account]: kube-state-metrics
  [Resource] (ResourceName/ResourceType): kube-state-metrics/Deployment

  [Permissions]:
    [clusterPermissions]: [
    {
        "verbs": "list,watch",
        "Resources": "deployments,replicasets,daemonsets",
        "API groups": "extensions"
    },
    {
        "verbs": "list,watch",
        "Resources": "horizontalpodautoscalers",
        "API groups": "autoscaling"
    },
    {
        "verbs": "list,watch",
        "Resources": "jobs,cronjobs",
        "API groups": "batch"
    },
    {
        "verbs": "list,watch",
        "Resources": "resourcequotas,endpoints,pods,limitranges,replicationcontrollers,configmaps,nodes,services,persistentvolumeclaims,persistentvolumes,namespaces,secrets",
        "API groups": ""
    },
    {
        "verbs": "list,watch",
        "Resources": "statefulsets",
        "API groups": "apps"
    }
]
    [cluster role over-privileged permissions]: [
    {
        "verbs": "watch",
        "Resources": "secrets",
        "API groups": ""
    },
    {
        "verbs": "list",
        "Resources": "secrets",
        "API groups": ""
    }
]

    [rolePermissions] (supermap): [
    {
        "verbs": "get",
        "Resources": "pods",
        "API groups": "core"
    },
    {
        "verbs": "update,get",
        "Resources": "deployments",
        "API groups": "extensions"
    }
]
    [role over-privileged permissions]: [] 

  [Role Details]:
    [clusterRoles]: [kube-state-metrics] [Main configs]
    [clusterRoleBindings]: [ServiceAccount/kube-state-metrics] [Main configs]

    [roles]: [kube-state-metrics-resizer] [Main configs]
    [roleBindings]: [ServiceAccount/kube-state-metrics] [Main configs]
    [roleResourceNames]: kube-state-metrics
-------------------------------------------

[Service Account]: istio-citadel-service-account
  [Resource] (ResourceName/ResourceType): istio-citadel/Deployment

  [Permissions]:
    [clusterPermissions]: [
    {
        "verbs": "list,update,get,create,watch,delete",
        "Resources": "secrets",
        "API groups": ""
    },
    {
        "verbs": "list,watch,get",
        "Resources": "serviceaccounts",
        "API groups": ""
    },
    {
        "verbs": "list,watch,get",
        "Resources": "services",
        "API groups": ""
    }
]
    [cluster role over-privileged permissions]: [
    {
        "verbs": "get",
        "Resources": "secrets",
        "API groups": ""
    },
    {
        "verbs": "watch",
        "Resources": "secrets",
        "API groups": ""
    },
    {
        "verbs": "list",
        "Resources": "secrets",
        "API groups": ""
    },
    {
        "verbs": "update",
        "Resources": "secrets",
        "API groups": ""
    }
]

    [rolePermissions] (default): []
    [role over-privileged permissions]: [] 

  [Role Details]:
    [clusterRoles]: [istio-citadel-default; istio-citadel-istio-system] [Example configs; Main configs]
    [clusterRoleBindings]: [ServiceAccount/istio-citadel-service-account] [Main configs; Example configs]

    [roles]: [] []
    [roleBindings]: [] []
-------------------------------------------

  [Resource] (ResourceName/ResourceType): istio-standalone-citadel/Deployment

  [Permissions]:
    [clusterPermissions]: [
    {
        "verbs": "list,update,get,create,watch,delete",
        "Resources": "secrets",
        "API groups": ""
    },
    {
        "verbs": "list,watch,get",
        "Resources": "serviceaccounts",
        "API groups": ""
    },
    {
        "verbs": "list,watch,get",
        "Resources": "services",
        "API groups": ""
    }
]
    [cluster role over-privileged permissions]: [
    {
        "verbs": "get",
        "Resources": "secrets",
        "API groups": ""
    },
    {
        "verbs": "watch",
        "Resources": "secrets",
        "API groups": ""
    },
    {
        "verbs": "list",
        "Resources": "secrets",
        "API groups": ""
    },
    {
        "verbs": "update",
        "Resources": "secrets",
        "API groups": ""
    }
]

    [rolePermissions] (default): []
    [role over-privileged permissions]: [] 

  [Role Details]:
    [clusterRoles]: [istio-citadel-default; istio-citadel-istio-system] [Example configs; Main configs]
    [clusterRoleBindings]: [ServiceAccount/istio-citadel-service-account] [Main configs; Example configs]

    [roles]: [] []
    [roleBindings]: [] []
-------------------------------------------

[Service Account]: release-name-prometheus-server
  [Resource] (ResourceName/ResourceType): release-name-prometheus-server/Deployment

  [Permissions]:
    [clusterPermissions]: [
    {
        "verbs": "get",
        "Resources": "",
        "API groups": "core"
    },
    {
        "verbs": "get",
        "Resources": "configmaps",
        "API groups": ""
    },
    {
        "verbs": "list,watch,get",
        "Resources": "endpoints,pods,nodes/proxy,nodes,services,ingresses",
        "API groups": ""
    },
    {
        "verbs": "list,watch,get",
        "Resources": "ingresses/status,ingresses",
        "API groups": "extensions"
    }
]
    [cluster role over-privileged permissions]: [] 

    [rolePermissions] (default): []
    [role over-privileged permissions]: [] 

  [Role Details]:
    [clusterRoles]: [release-name-prometheus-server] [Main configs]
    [clusterRoleBindings]: [ServiceAccount/release-name-prometheus-server] [Main configs]

    [roles]: [] []
    [roleBindings]: [] []
-------------------------------------------

[Service Account]: argo-events-sa
  [Resource] (ResourceName/ResourceType): eventbus-controller/Deployment

  [Permissions]:
    [clusterPermissions]: [
    {
        "verbs": "list,patch,update,get,create,watch,delete,deletecollection",
        "Resources": "clusterworkflowtemplates,sensors/finalizers,workflows,workflowtemplates,eventsources/finalizers,cronworkflows/finalizers,cronworkflows,eventsources,clusterworkflowtemplates/finalizers,eventbus/finalizers,eventbus/status,workflowtemplates/finalizers,eventsources/status,sensors/status,sensors,workflows/finalizers,eventbus",
        "API groups": "argoproj.io"
    },
    {
        "verbs": "list,patch,update,get,create,watch,delete,deletecollection",
        "Resources": "customresourcedefinitions",
        "API groups": "apiextensions.k8s.io/v1beta1,apiextensions.k8s.io"
    },
    {
        "verbs": "list,patch,update,get,create,watch,delete",
        "Resources": "deployments,statefulsets",
        "API groups": "apps"
    },
    {
        "verbs": "list,patch,update,get,create,watch,delete",
        "Resources": "events,pods,pods/exec,configmaps,persistentvolumeclaims,services,secrets",
        "API groups": ""
    },
    {
        "verbs": "list,patch,update,get,create,watch,delete",
        "Resources": "jobs",
        "API groups": "batch"
    }
]
    [cluster role over-privileged permissions]: [
    {
        "verbs": "patch",
        "Resources": "secrets",
        "API groups": ""
    },
    {
        "verbs": "watch",
        "Resources": "secrets",
        "API groups": ""
    },
    {
        "verbs": "update",
        "Resources": "statefulsets",
        "API groups": "apps"
    },
    {
        "verbs": "update",
        "Resources": "jobs",
        "API groups": "batch"
    },
    {
        "verbs": "create",
        "Resources": "deployments",
        "API groups": "apps"
    },
    {
        "verbs": "update",
        "Resources": "pods",
        "API groups": ""
    },
    {
        "verbs": "create",
        "Resources": "jobs",
        "API groups": "batch"
    },
    {
        "verbs": "patch",
        "Resources": "jobs",
        "API groups": "batch"
    },
    {
        "verbs": "create",
        "Resources": "statefulsets",
        "API groups": "apps"
    },
    {
        "verbs": "list",
        "Resources": "secrets",
        "API groups": ""
    },
    {
        "verbs": "patch",
        "Resources": "pods",
        "API groups": ""
    },
    {
        "verbs": "update",
        "Resources": "secrets",
        "API groups": ""
    },
    {
        "verbs": "get",
        "Resources": "secrets",
        "API groups": ""
    },
    {
        "verbs": "create",
        "Resources": "pods",
        "API groups": ""
    },
    {
        "verbs": "patch",
        "Resources": "statefulsets",
        "API groups": "apps"
    },
    {
        "verbs": "patch",
        "Resources": "deployments",
        "API groups": "apps"
    },
    {
        "verbs": "update",
        "Resources": "deployments",
        "API groups": "apps"
    }
]

    [rolePermissions] (default): []
    [role over-privileged permissions]: [] 

  [Role Details]:
    [clusterRoles]: [argo-events-role] [Main configs]
    [clusterRoleBindings]: [ServiceAccount/argo-events-sa] [Main configs]

    [roles]: [] []
    [roleBindings]: [] []
-------------------------------------------

  [Resource] (ResourceName/ResourceType): eventsource-controller/Deployment

  [Permissions]:
    [clusterPermissions]: [
    {
        "verbs": "list,patch,update,get,create,watch,delete,deletecollection",
        "Resources": "clusterworkflowtemplates,sensors/finalizers,workflows,workflowtemplates,eventsources/finalizers,cronworkflows/finalizers,cronworkflows,eventsources,clusterworkflowtemplates/finalizers,eventbus/finalizers,eventbus/status,workflowtemplates/finalizers,eventsources/status,sensors/status,sensors,workflows/finalizers,eventbus",
        "API groups": "argoproj.io"
    },
    {
        "verbs": "list,patch,update,get,create,watch,delete,deletecollection",
        "Resources": "customresourcedefinitions",
        "API groups": "apiextensions.k8s.io/v1beta1,apiextensions.k8s.io"
    },
    {
        "verbs": "list,patch,update,get,create,watch,delete",
        "Resources": "deployments,statefulsets",
        "API groups": "apps"
    },
    {
        "verbs": "list,patch,update,get,create,watch,delete",
        "Resources": "events,pods,pods/exec,configmaps,persistentvolumeclaims,services,secrets",
        "API groups": ""
    },
    {
        "verbs": "list,patch,update,get,create,watch,delete",
        "Resources": "jobs",
        "API groups": "batch"
    }
]
    [cluster role over-privileged permissions]: [
    {
        "verbs": "patch",
        "Resources": "secrets",
        "API groups": ""
    },
    {
        "verbs": "watch",
        "Resources": "secrets",
        "API groups": ""
    },
    {
        "verbs": "update",
        "Resources": "statefulsets",
        "API groups": "apps"
    },
    {
        "verbs": "update",
        "Resources": "jobs",
        "API groups": "batch"
    },
    {
        "verbs": "create",
        "Resources": "deployments",
        "API groups": "apps"
    },
    {
        "verbs": "update",
        "Resources": "pods",
        "API groups": ""
    },
    {
        "verbs": "create",
        "Resources": "jobs",
        "API groups": "batch"
    },
    {
        "verbs": "patch",
        "Resources": "jobs",
        "API groups": "batch"
    },
    {
        "verbs": "create",
        "Resources": "statefulsets",
        "API groups": "apps"
    },
    {
        "verbs": "list",
        "Resources": "secrets",
        "API groups": ""
    },
    {
        "verbs": "patch",
        "Resources": "pods",
        "API groups": ""
    },
    {
        "verbs": "update",
        "Resources": "secrets",
        "API groups": ""
    },
    {
        "verbs": "get",
        "Resources": "secrets",
        "API groups": ""
    },
    {
        "verbs": "create",
        "Resources": "pods",
        "API groups": ""
    },
    {
        "verbs": "patch",
        "Resources": "statefulsets",
        "API groups": "apps"
    },
    {
        "verbs": "patch",
        "Resources": "deployments",
        "API groups": "apps"
    },
    {
        "verbs": "update",
        "Resources": "deployments",
        "API groups": "apps"
    }
]

    [rolePermissions] (default): []
    [role over-privileged permissions]: [] 

  [Role Details]:
    [clusterRoles]: [argo-events-role] [Main configs]
    [clusterRoleBindings]: [ServiceAccount/argo-events-sa] [Main configs]

    [roles]: [] []
    [roleBindings]: [] []
-------------------------------------------

  [Resource] (ResourceName/ResourceType): sensor-controller/Deployment

  [Permissions]:
    [clusterPermissions]: [
    {
        "verbs": "list,patch,update,get,create,watch,delete,deletecollection",
        "Resources": "clusterworkflowtemplates,sensors/finalizers,workflows,workflowtemplates,eventsources/finalizers,cronworkflows/finalizers,cronworkflows,eventsources,clusterworkflowtemplates/finalizers,eventbus/finalizers,eventbus/status,workflowtemplates/finalizers,eventsources/status,sensors/status,sensors,workflows/finalizers,eventbus",
        "API groups": "argoproj.io"
    },
    {
        "verbs": "list,patch,update,get,create,watch,delete,deletecollection",
        "Resources": "customresourcedefinitions",
        "API groups": "apiextensions.k8s.io/v1beta1,apiextensions.k8s.io"
    },
    {
        "verbs": "list,patch,update,get,create,watch,delete",
        "Resources": "deployments,statefulsets",
        "API groups": "apps"
    },
    {
        "verbs": "list,patch,update,get,create,watch,delete",
        "Resources": "events,pods,pods/exec,configmaps,persistentvolumeclaims,services,secrets",
        "API groups": ""
    },
    {
        "verbs": "list,patch,update,get,create,watch,delete",
        "Resources": "jobs",
        "API groups": "batch"
    }
]
    [cluster role over-privileged permissions]: [
    {
        "verbs": "patch",
        "Resources": "secrets",
        "API groups": ""
    },
    {
        "verbs": "watch",
        "Resources": "secrets",
        "API groups": ""
    },
    {
        "verbs": "update",
        "Resources": "statefulsets",
        "API groups": "apps"
    },
    {
        "verbs": "update",
        "Resources": "jobs",
        "API groups": "batch"
    },
    {
        "verbs": "create",
        "Resources": "deployments",
        "API groups": "apps"
    },
    {
        "verbs": "update",
        "Resources": "pods",
        "API groups": ""
    },
    {
        "verbs": "create",
        "Resources": "jobs",
        "API groups": "batch"
    },
    {
        "verbs": "patch",
        "Resources": "jobs",
        "API groups": "batch"
    },
    {
        "verbs": "create",
        "Resources": "statefulsets",
        "API groups": "apps"
    },
    {
        "verbs": "list",
        "Resources": "secrets",
        "API groups": ""
    },
    {
        "verbs": "patch",
        "Resources": "pods",
        "API groups": ""
    },
    {
        "verbs": "update",
        "Resources": "secrets",
        "API groups": ""
    },
    {
        "verbs": "get",
        "Resources": "secrets",
        "API groups": ""
    },
    {
        "verbs": "create",
        "Resources": "pods",
        "API groups": ""
    },
    {
        "verbs": "patch",
        "Resources": "statefulsets",
        "API groups": "apps"
    },
    {
        "verbs": "patch",
        "Resources": "deployments",
        "API groups": "apps"
    },
    {
        "verbs": "update",
        "Resources": "deployments",
        "API groups": "apps"
    }
]

    [rolePermissions] (default): []
    [role over-privileged permissions]: [] 

  [Role Details]:
    [clusterRoles]: [argo-events-role] [Main configs]
    [clusterRoleBindings]: [ServiceAccount/argo-events-sa] [Main configs]

    [roles]: [] []
    [roleBindings]: [] []
-------------------------------------------

[Service Account]: istio-pilot-service-account
  [Resource] (ResourceName/ResourceType): istio-pilot/Deployment

  [Permissions]:
    [clusterPermissions]: [
    {
        "verbs": "*",
        "Resources": "*",
        "API groups": "authentication.istio.io"
    },
    {
        "verbs": "*",
        "Resources": "*",
        "API groups": "config.istio.io"
    },
    {
        "verbs": "*",
        "Resources": "*",
        "API groups": "networking.istio.io"
    },
    {
        "verbs": "*",
        "Resources": "customresourcedefinitions",
        "API groups": "apiextensions.k8s.io"
    },
    {
        "verbs": "*",
        "Resources": "ingresses/status,thirdpartyresources,ingresses,thirdpartyresources.extensions",
        "API groups": "extensions"
    },
    {
        "verbs": "list,update,get,create,watch",
        "Resources": "configmaps",
        "API groups": ""
    },
    {
        "verbs": "list,watch,get",
        "Resources": "*",
        "API groups": "rbac.istio.io"
    },
    {
        "verbs": "list,watch,get",
        "Resources": "namespaces,secrets,nodes",
        "API groups": ""
    },
    {
        "verbs": "list,watch,get",
        "Resources": "services,endpoints,pods",
        "API groups": ""
    }
]
    [cluster role over-privileged permissions]: [
    {
        "verbs": "get",
        "Resources": "secrets",
        "API groups": ""
    },
    {
        "verbs": "watch",
        "Resources": "secrets",
        "API groups": ""
    },
    {
        "verbs": "list",
        "Resources": "secrets",
        "API groups": ""
    }
]

    [rolePermissions] (default): []
    [role over-privileged permissions]: [] 

  [Role Details]:
    [clusterRoles]: [istio-pilot-istio-system] [Example configs]
    [clusterRoleBindings]: [ServiceAccount/istio-pilot-service-account] [Main configs; Example configs]

    [roles]: [] []
    [roleBindings]: [] []
-------------------------------------------

[Service Account]: k8s-dashboard
  [Resource] (ResourceName/ResourceType): k8s-dashboard/Deployment

  [Permissions]:
    [clusterPermissions]: [
    {
        "verbs": "create",
        "Resources": "configmaps",
        "API groups": ""
    },
    {
        "verbs": "create",
        "Resources": "pods/exec",
        "API groups": ""
    },
    {
        "verbs": "create",
        "Resources": "secrets",
        "API groups": ""
    },
    {
        "verbs": "get",
        "Resources": "services/proxy",
        "API groups": ""
    },
    {
        "verbs": "list,watch,get",
        "Resources": "pods/log,pods",
        "API groups": ""
    },
    {
        "verbs": "list,watch,get",
        "Resources": "replicasets",
        "API groups": "apps,extensions"
    },
    {
        "verbs": "proxy",
        "Resources": "services",
        "API groups": ""
    },
    {
        "verbs": "update,delete,get",
        "Resources": "secrets",
        "API groups": ""
    },
    {
        "verbs": "update,get",
        "Resources": "configmaps",
        "API groups": ""
    }
]
    [cluster role over-privileged permissions]: [
    {
        "verbs": "update",
        "Resources": "secrets",
        "API groups": ""
    },
    {
        "verbs": "get",
        "Resources": "secrets",
        "API groups": ""
    }
]

    [rolePermissions] (default): []
    [role over-privileged permissions]: [] 

  [Role Details]:
    [clusterRoles]: [k8s-dashboard] [Main configs]
    [clusterRoleBindings]: [ServiceAccount/k8s-dashboard] [Main configs]

    [roles]: [] []
    [roleBindings]: [] []
    [clusterResourceNames]: https:heapster,heapster,http:heapster, heapster, kubernetes-dashboard-settings, kubernetes-dashboard-key-holder
-------------------------------------------

[Service Account]: dashboard
  [Resource] (ResourceName/ResourceType): active/default

  [Permissions]:
    [clusterPermissions]: []
    [cluster role over-privileged permissions]: [] 

    [rolePermissions] (default): []
    [role over-privileged permissions]: [] 

  [Role Details]:
    [clusterRoles]: [cluster-admin] []
    [clusterRoleBindings]: [ServiceAccount/dashboard] [Main configs]

    [roles]: [] []
    [roleBindings]: [] []
-------------------------------------------

[Service Account]: imanager-dashboard-backend
  [Resource] (ResourceName/ResourceType): imanager-dashboard-backend/Deployment

  [Permissions]:
    [clusterPermissions]: [
    {
        "verbs": "*",
        "Resources": "*",
        "API groups": "*"
    }
]
    [cluster role over-privileged permissions]: [] 

    [rolePermissions] (default): []
    [role over-privileged permissions]: [] 

  [Role Details]:
    [clusterRoles]: [imanager-dashboard-backend] [Main configs]
    [clusterRoleBindings]: [ServiceAccount/imanager-dashboard-backend] [Main configs]

    [roles]: [] []
    [roleBindings]: [] []
-------------------------------------------

[Service Account]: release-name-grafana
  [Resource] (ResourceName/ResourceType): release-name-grafana/Deployment

  [Permissions]:
    [clusterPermissions]: []
    [cluster role over-privileged permissions]: [] 

    [rolePermissions] (default): [
    {
        "verbs": "use",
        "Resources": "podsecuritypolicies",
        "API groups": "extensions"
    }
]
    [role over-privileged permissions]: [] 

  [Role Details]:
    [clusterRoles]: [] []
    [clusterRoleBindings]: [] []

    [roles]: [release-name-grafana] [Main configs]
    [roleBindings]: [ServiceAccount/release-name-grafana] [Main configs]
    [roleResourceNames]: release-name-grafana
-------------------------------------------

[Service Account]: release-name-nfs-server-provisioner
  [Resource] (ResourceName/ResourceType): release-name-nfs-server-provisioner/StatefulSet

  [Permissions]:
    [clusterPermissions]: [
    {
        "verbs": "get",
        "Resources": "endpoints,services",
        "API groups": ""
    },
    {
        "verbs": "list,get,create,watch,delete",
        "Resources": "persistentvolumes",
        "API groups": ""
    },
    {
        "verbs": "list,patch,update,create,watch",
        "Resources": "events",
        "API groups": ""
    },
    {
        "verbs": "list,watch,get",
        "Resources": "storageclasses",
        "API groups": "storage.k8s.io"
    },
    {
        "verbs": "update,list,watch,get",
        "Resources": "persistentvolumeclaims",
        "API groups": ""
    },
    {
        "verbs": "use",
        "Resources": "podsecuritypolicies",
        "API groups": "extensions"
    }
]
    [cluster role over-privileged permissions]: [] 

    [rolePermissions] (default): []
    [role over-privileged permissions]: [] 

  [Role Details]:
    [clusterRoles]: [release-name-nfs-server-provisioner] [Main configs]
    [clusterRoleBindings]: [ServiceAccount/release-name-nfs-server-provisioner] [Main configs]

    [roles]: [] []
    [roleBindings]: [] []
    [clusterResourceNames]: nfs-provisioner
-------------------------------------------

[Service Account]: nfs-client-provisioner
  [Resource] (ResourceName/ResourceType): active/default

  [Permissions]:
    [clusterPermissions]: [
    {
        "verbs": "list,get,create,watch,delete",
        "Resources": "persistentvolumes",
        "API groups": ""
    },
    {
        "verbs": "list,patch,update,create,watch",
        "Resources": "events",
        "API groups": ""
    },
    {
        "verbs": "list,watch,get",
        "Resources": "storageclasses",
        "API groups": "storage.k8s.io"
    },
    {
        "verbs": "update,list,watch,get",
        "Resources": "persistentvolumeclaims",
        "API groups": ""
    }
]
    [cluster role over-privileged permissions]: [] 

    [rolePermissions] (default): []
    [role over-privileged permissions]: [] 

  [Role Details]:
    [clusterRoles]: [nfs-client-provisioner-runner] [Main configs]
    [clusterRoleBindings]: [ServiceAccount/nfs-client-provisioner] [Main configs]

    [roles]: [] []
    [roleBindings]: [] []
-------------------------------------------

[Service Account]: argo
  [Resource] (ResourceName/ResourceType): workflow-controller/Deployment

  [Permissions]:
    [clusterPermissions]: [
    {
        "verbs": "create,delete,get",
        "Resources": "persistentvolumeclaims",
        "API groups": ""
    },
    {
        "verbs": "create,delete,get",
        "Resources": "poddisruptionbudgets",
        "API groups": "policy"
    },
    {
        "verbs": "list,get",
        "Resources": "serviceaccounts",
        "API groups": ""
    },
    {
        "verbs": "list,patch,update,get,create,watch,delete",
        "Resources": "pods,pods/exec",
        "API groups": ""
    },
    {
        "verbs": "list,patch,update,get,create,watch,delete",
        "Resources": "workflows/finalizers,workflows",
        "API groups": "argoproj.io"
    },
    {
        "verbs": "list,patch,update,get,watch,delete",
        "Resources": "cronworkflows/finalizers,cronworkflows",
        "API groups": "argoproj.io"
    },
    {
        "verbs": "list,watch,get",
        "Resources": "clusterworkflowtemplates,workflowtemplates,clusterworkflowtemplates/finalizers,workflowtemplates/finalizers",
        "API groups": "argoproj.io"
    },
    {
        "verbs": "list,watch,get",
        "Resources": "configmaps",
        "API groups": ""
    },
    {
        "verbs": "patch,create",
        "Resources": "events",
        "API groups": ""
    }
]
    [cluster role over-privileged permissions]: [
    {
        "verbs": "update",
        "Resources": "pods",
        "API groups": ""
    },
    {
        "verbs": "patch",
        "Resources": "pods",
        "API groups": ""
    },
    {
        "verbs": "create",
        "Resources": "pods",
        "API groups": ""
    }
]

    [rolePermissions] (default): [
    {
        "verbs": "create,update,get",
        "Resources": "leases",
        "API groups": "coordination.k8s.io"
    },
    {
        "verbs": "get",
        "Resources": "secrets",
        "API groups": "core"
    }
]
    [role over-privileged permissions]: [
    {
        "verbs": "get",
        "Resources": "secrets",
        "API groups": "core"
    }
]

  [Role Details]:
    [clusterRoles]: [argo-cluster-role] [Main configs]
    [clusterRoleBindings]: [ServiceAccount/argo] [Main configs]

    [roles]: [argo-role] [Main configs]
    [roleBindings]: [ServiceAccount/argo] [Main configs]
-------------------------------------------

[Service Account]: rook-node-annotator
  [Resource] (ResourceName/ResourceType): ceph-after-reboot-check/DaemonSet

  [Permissions]:
    [clusterPermissions]: [
    {
        "verbs": "patch,get",
        "Resources": "nodes",
        "API groups": ""
    }
]
    [cluster role over-privileged permissions]: [
    {
        "verbs": "patch",
        "Resources": "nodes",
        "API groups": ""
    }
]

    [rolePermissions] (default): []
    [role over-privileged permissions]: [] 

  [Role Details]:
    [clusterRoles]: [rook-node-annotator] [Example configs]
    [clusterRoleBindings]: [ServiceAccount/rook-node-annotator] [Example configs]

    [roles]: [] []
    [roleBindings]: [] []
-------------------------------------------

  [Resource] (ResourceName/ResourceType): ceph-before-reboot-check/DaemonSet

  [Permissions]:
    [clusterPermissions]: [
    {
        "verbs": "patch,get",
        "Resources": "nodes",
        "API groups": ""
    }
]
    [cluster role over-privileged permissions]: [
    {
        "verbs": "patch",
        "Resources": "nodes",
        "API groups": ""
    }
]

    [rolePermissions] (default): []
    [role over-privileged permissions]: [] 

  [Role Details]:
    [clusterRoles]: [rook-node-annotator] [Example configs]
    [clusterRoleBindings]: [ServiceAccount/rook-node-annotator] [Example configs]

    [roles]: [] []
    [roleBindings]: [] []
-------------------------------------------

[Service Account]: fluentd-es
  [Resource] (ResourceName/ResourceType): fluentd-es/DaemonSet

  [Permissions]:
    [clusterPermissions]: [
    {
        "verbs": "list,watch,get",
        "Resources": "namespaces,pods",
        "API groups": ""
    }
]
    [cluster role over-privileged permissions]: [] 

    [rolePermissions] (default): []
    [role over-privileged permissions]: [] 

  [Role Details]:
    [clusterRoles]: [fluentd-es] [Main configs]
    [clusterRoleBindings]: [ServiceAccount/fluentd-es] [Main configs]

    [roles]: [] []
    [roleBindings]: [] []
-------------------------------------------

[Service Account]: istio-security-post-install-account
  [Resource] (ResourceName/ResourceType): active/default

  [Permissions]:
    [clusterPermissions]: [
    {
        "verbs": "*",
        "Resources": "*",
        "API groups": "authentication.istio.io"
    },
    {
        "verbs": "*",
        "Resources": "*",
        "API groups": "networking.istio.io"
    },
    {
        "verbs": "get",
        "Resources": "validatingwebhookconfigurations",
        "API groups": "admissionregistration.k8s.io"
    },
    {
        "verbs": "list,watch,get",
        "Resources": "deployments,replicasets",
        "API groups": "extensions"
    }
]
    [cluster role over-privileged permissions]: [] 

    [rolePermissions] (default): []
    [role over-privileged permissions]: [] 

  [Role Details]:
    [clusterRoles]: [istio-security-post-install-istio-system] [Example configs]
    [clusterRoleBindings]: [ServiceAccount/istio-security-post-install-account] [Example configs]

    [roles]: [] []
    [roleBindings]: [] []
-------------------------------------------

[Service Account]: rook-ceph-operator
  [Resource] (ResourceName/ResourceType): rook-ceph-operator/Deployment

  [Permissions]:
    [clusterPermissions]: [
    {
        "verbs": "*",
        "Resources": "*",
        "API groups": "ceph.rook.io"
    },
    {
        "verbs": "*",
        "Resources": "*",
        "API groups": "rook.io"
    },
    {
        "verbs": "list,patch,update,get,create,watch,delete",
        "Resources": "serviceaccounts,events,pods,nodes/proxy,nodes,configmaps,services,persistentvolumes,persistentvolumeclaims,namespaces,secrets",
        "API groups": ""
    },
    {
        "verbs": "list,update,get,create,watch,delete",
        "Resources": "deployments,replicasets,daemonsets",
        "API groups": "extensions"
    },
    {
        "verbs": "list,update,get,create,watch,delete",
        "Resources": "rolebindings,clusterroles,clusterrolebindings,roles",
        "API groups": "rbac.authorization.k8s.io"
    },
    {
        "verbs": "list,watch,delete,get",
        "Resources": "storageclasses",
        "API groups": "storage.k8s.io"
    }
]
    [cluster role over-privileged permissions]: [
    {
        "verbs": "patch",
        "Resources": "secrets",
        "API groups": ""
    },
    {
        "verbs": "watch",
        "Resources": "secrets",
        "API groups": ""
    },
    {
        "verbs": "update",
        "Resources": "nodes",
        "API groups": ""
    },
    {
        "verbs": "update",
        "Resources": "pods",
        "API groups": ""
    },
    {
        "verbs": "patch",
        "Resources": "nodes",
        "API groups": ""
    },
    {
        "verbs": "list",
        "Resources": "secrets",
        "API groups": ""
    },
    {
        "verbs": "patch",
        "Resources": "pods",
        "API groups": ""
    },
    {
        "verbs": "update",
        "Resources": "secrets",
        "API groups": ""
    },
    {
        "verbs": "get",
        "Resources": "secrets",
        "API groups": ""
    },
    {
        "verbs": "create",
        "Resources": "pods",
        "API groups": ""
    }
]

    [rolePermissions] (default): []
    [role over-privileged permissions]: [] 

  [Role Details]:
    [clusterRoles]: [rook-ceph-operator] [Example configs]
    [clusterRoleBindings]: [ServiceAccount/rook-ceph-operator] [Example configs]

    [roles]: [] []
    [roleBindings]: [] []
-------------------------------------------

[Service Account]: release-name-prometheus-cloudwatch-exporter
  [Resource] (ResourceName/ResourceType): active/default

  [Permissions]:
    [clusterPermissions]: [
    {
        "verbs": "get",
        "Resources": "secrets,configmap",
        "API groups": ""
    }
]
    [cluster role over-privileged permissions]: [
    {
        "verbs": "get",
        "Resources": "secrets",
        "API groups": ""
    }
]

    [rolePermissions] (default): []
    [role over-privileged permissions]: [] 

  [Role Details]:
    [clusterRoles]: [release-name-prometheus-cloudwatch-exporter] [Main configs]
    [clusterRoleBindings]: [ServiceAccount/release-name-prometheus-cloudwatch-exporter] [Main configs]

    [roles]: [] []
    [roleBindings]: [] []
    [clusterResourceNames]: release-name-prometheus-cloudwatch-exporter
-------------------------------------------

[Service Account]: argo-server
  [Resource] (ResourceName/ResourceType): argo-server/Deployment

  [Permissions]:
    [clusterPermissions]: [
    {
        "verbs": "create,get",
        "Resources": "secrets",
        "API groups": ""
    },
    {
        "verbs": "list,get",
        "Resources": "serviceaccounts",
        "API groups": ""
    },
    {
        "verbs": "list,patch,update,get,create,watch,delete",
        "Resources": "clusterworkflowtemplates,workflows,workflowtemplates,workfloweventbindings,cronworkflows,sensors,eventsources",
        "API groups": "argoproj.io"
    },
    {
        "verbs": "list,watch,delete,get",
        "Resources": "pods/log,pods,pods/exec",
        "API groups": ""
    },
    {
        "verbs": "list,watch,get",
        "Resources": "configmaps",
        "API groups": ""
    },
    {
        "verbs": "patch,create,watch",
        "Resources": "events",
        "API groups": ""
    }
]
    [cluster role over-privileged permissions]: [
    {
        "verbs": "get",
        "Resources": "secrets",
        "API groups": ""
    }
]

    [rolePermissions] (default): []
    [role over-privileged permissions]: [] 

  [Role Details]:
    [clusterRoles]: [argo-server-cluster-role] [Main configs]
    [clusterRoleBindings]: [ServiceAccount/argo-server] [Main configs]

    [roles]: [] []
    [roleBindings]: [] []
-------------------------------------------

[Service Account]: prometheus
  [Resource] (ResourceName/ResourceType): prometheus/Deployment

  [Permissions]:
    [clusterPermissions]: [
    {
        "verbs": "get",
        "Resources": "",
        "API groups": "core"
    },
    {
        "verbs": "get",
        "Resources": "configmaps",
        "API groups": ""
    },
    {
        "verbs": "list,watch,get",
        "Resources": "endpoints,pods,nodes/proxy,nodes,services",
        "API groups": ""
    },
    {
        "verbs": "list,watch,get",
        "Resources": "ingresses",
        "API groups": "extensions"
    }
]
    [cluster role over-privileged permissions]: [] 

    [rolePermissions] (default): []
    [role over-privileged permissions]: [] 

  [Role Details]:
    [clusterRoles]: [prometheus; prometheus-istio-system] [Main configs; Example configs]
    [clusterRoleBindings]: [ServiceAccount/prometheus] [Example configs; Main configs]

    [roles]: [] []
    [roleBindings]: [] []
-------------------------------------------

