[Service Account]: release-name-ingress-nginx
  [Resource] (ResourceName/ResourceType): release-name-ingress-nginx-controller/Deployment

  [Permissions]:
    [clusterPermissions]: [
    {
        "verbs": "get",
        "Resources": "nodes",
        "API groups": ""
    },
    {
        "verbs": "list,watch,get",
        "Resources": "ingressclasses",
        "API groups": "networking.k8s.io"
    },
    {
        "verbs": "list,watch,get",
        "Resources": "ingresses",
        "API groups": "networking.k8s.io"
    },
    {
        "verbs": "list,watch,get",
        "Resources": "services",
        "API groups": ""
    },
    {
        "verbs": "list,watch",
        "Resources": "endpoints,pods,configmaps,nodes,namespaces,secrets",
        "API groups": ""
    },
    {
        "verbs": "patch,create",
        "Resources": "events",
        "API groups": ""
    },
    {
        "verbs": "update",
        "Resources": "ingresses/status",
        "API groups": "networking.k8s.io"
    }
]
    [cluster role over-privileged permissions]: [
    {
        "verbs": "watch",
        "Resources": "secrets",
        "API groups": ""
    },
    {
        "verbs": "list",
        "Resources": "secrets",
        "API groups": ""
    }
]

    [rolePermissions] (default): [
    {
        "verbs": "create",
        "Resources": "configmaps",
        "API groups": "core"
    },
    {
        "verbs": "get",
        "Resources": "namespaces",
        "API groups": "core"
    },
    {
        "verbs": "list,watch,get",
        "Resources": "endpoints,configmaps,secrets,pods",
        "API groups": "core"
    },
    {
        "verbs": "list,watch,get",
        "Resources": "ingressclasses",
        "API groups": "networking.k8s.io"
    },
    {
        "verbs": "list,watch,get",
        "Resources": "ingresses",
        "API groups": "networking.k8s.io"
    },
    {
        "verbs": "list,watch,get",
        "Resources": "services",
        "API groups": "core"
    },
    {
        "verbs": "patch,create",
        "Resources": "events",
        "API groups": "core"
    },
    {
        "verbs": "update,get",
        "Resources": "configmaps",
        "API groups": "core"
    },
    {
        "verbs": "update",
        "Resources": "ingresses/status",
        "API groups": "networking.k8s.io"
    }
]
    [role over-privileged permissions]: [
    {
        "verbs": "list",
        "Resources": "secrets",
        "API groups": "core"
    },
    {
        "verbs": "get",
        "Resources": "secrets",
        "API groups": "core"
    },
    {
        "verbs": "watch",
        "Resources": "secrets",
        "API groups": "core"
    }
]

  [Role Details]:
    [clusterRoles]: [release-name-ingress-nginx] [Main configs]
    [clusterRoleBindings]: [ServiceAccount/release-name-ingress-nginx] [Main configs]

    [roles]: [release-name-ingress-nginx] [Main configs]
    [roleBindings]: [ServiceAccount/release-name-ingress-nginx] [Main configs]
    [roleResourceNames]: ingress-controller-leader
-------------------------------------------

[Service Account]: release-name-cert-manager-startupapicheck
  [Resource] (ResourceName/ResourceType): active/default

  [Permissions]:
    [clusterPermissions]: []
    [cluster role over-privileged permissions]: [] 

    [rolePermissions] (default): [
    {
        "verbs": "create",
        "Resources": "certificates",
        "API groups": "cert-manager.io"
    }
]
    [role over-privileged permissions]: [] 

  [Role Details]:
    [clusterRoles]: [] []
    [clusterRoleBindings]: [] []

    [roles]: [release-name-cert-manager-startupapicheck:create-cert] [Main configs]
    [roleBindings]: [ServiceAccount/release-name-cert-manager-startupapicheck] [Main configs]
-------------------------------------------

[Service Account]: release-name-rabbitmq
  [Resource] (ResourceName/ResourceType): release-name-rabbitmq/StatefulSet

  [Permissions]:
    [clusterPermissions]: []
    [cluster role over-privileged permissions]: [] 

    [rolePermissions] (default): [
    {
        "verbs": "create",
        "Resources": "events",
        "API groups": "core"
    },
    {
        "verbs": "get",
        "Resources": "endpoints",
        "API groups": "core"
    }
]
    [role over-privileged permissions]: [] 

  [Role Details]:
    [clusterRoles]: [] []
    [clusterRoleBindings]: [] []

    [roles]: [release-name-rabbitmq-endpoint-reader] [Main configs]
    [roleBindings]: [ServiceAccount/release-name-rabbitmq] [Main configs]
-------------------------------------------

[Service Account]: release-name-cert-manager-cainjector
  [Resource] (ResourceName/ResourceType): release-name-cert-manager-cainjector/Deployment

  [Permissions]:
    [clusterPermissions]: [
    {
        "verbs": "list,watch,get",
        "Resources": "certificates",
        "API groups": "cert-manager.io"
    },
    {
        "verbs": "list,watch,get",
        "Resources": "secrets",
        "API groups": ""
    },
    {
        "verbs": "patch,create,update,get",
        "Resources": "events",
        "API groups": ""
    },
    {
        "verbs": "update,list,watch,get",
        "Resources": "apiservices",
        "API groups": "apiregistration.k8s.io"
    },
    {
        "verbs": "update,list,watch,get",
        "Resources": "customresourcedefinitions",
        "API groups": "apiextensions.k8s.io"
    },
    {
        "verbs": "update,list,watch,get",
        "Resources": "mutatingwebhookconfigurations,validatingwebhookconfigurations",
        "API groups": "admissionregistration.k8s.io"
    }
]
    [cluster role over-privileged permissions]: [
    {
        "verbs": "get",
        "Resources": "secrets",
        "API groups": ""
    },
    {
        "verbs": "watch",
        "Resources": "secrets",
        "API groups": ""
    },
    {
        "verbs": "list",
        "Resources": "secrets",
        "API groups": ""
    }
]

    [rolePermissions] (default): [
    {
        "verbs": "create",
        "Resources": "leases",
        "API groups": "coordination.k8s.io"
    },
    {
        "verbs": "patch,update,get",
        "Resources": "leases",
        "API groups": "coordination.k8s.io"
    }
]
    [role over-privileged permissions]: [] 

  [Role Details]:
    [clusterRoles]: [release-name-cert-manager-cainjector] [Main configs]
    [clusterRoleBindings]: [ServiceAccount/release-name-cert-manager-cainjector] [Main configs]

    [roles]: [release-name-cert-manager-cainjector:leaderelection] [Main configs]
    [roleBindings]: [ServiceAccount/release-name-cert-manager-cainjector] [Main configs]
    [roleResourceNames]: cert-manager-cainjector-leader-election-core,cert-manager-cainjector-leader-election
-------------------------------------------

[Service Account]: release-name-cert-manager
  [Resource] (ResourceName/ResourceType): release-name-cert-manager/Deployment

  [Permissions]:
    [clusterPermissions]: [
    {
        "verbs": "approve",
        "Resources": "signers",
        "API groups": "cert-manager.io"
    },
    {
        "verbs": "create,delete",
        "Resources": "challenges",
        "API groups": "acme.cert-manager.io"
    },
    {
        "verbs": "create,update,delete",
        "Resources": "certificaterequests,certificates",
        "API groups": "cert-manager.io"
    },
    {
        "verbs": "create",
        "Resources": "routes/custom-host",
        "API groups": "route.openshift.io"
    },
    {
        "verbs": "create",
        "Resources": "subjectaccessreviews",
        "API groups": "authorization.k8s.io"
    },
    {
        "verbs": "list,get,create,watch,delete",
        "Resources": "orders",
        "API groups": "acme.cert-manager.io"
    },
    {
        "verbs": "list,get,create,watch,delete",
        "Resources": "services,pods",
        "API groups": ""
    },
    {
        "verbs": "list,patch,update,get,create,watch,delete",
        "Resources": "secrets",
        "API groups": ""
    },
    {
        "verbs": "list,update,get,create,watch,delete",
        "Resources": "httproutes",
        "API groups": "gateway.networking.k8s.io"
    },
    {
        "verbs": "list,update,get,create,watch,delete",
        "Resources": "ingresses",
        "API groups": "networking.k8s.io"
    },
    {
        "verbs": "list,update,get,create,watch,delete",
        "Resources": "secrets",
        "API groups": ""
    },
    {
        "verbs": "list,watch,get",
        "Resources": "certificaterequests,issuers,clusterissuers,certificates",
        "API groups": "cert-manager.io"
    },
    {
        "verbs": "list,watch,get",
        "Resources": "challenges,orders",
        "API groups": "acme.cert-manager.io"
    },
    {
        "verbs": "list,watch,get",
        "Resources": "challenges",
        "API groups": "acme.cert-manager.io"
    },
    {
        "verbs": "list,watch,get",
        "Resources": "clusterissuers",
        "API groups": "cert-manager.io"
    },
    {
        "verbs": "list,watch,get",
        "Resources": "gateways,httproutes",
        "API groups": "gateway.networking.k8s.io"
    },
    {
        "verbs": "list,watch,get",
        "Resources": "ingresses",
        "API groups": "networking.k8s.io"
    },
    {
        "verbs": "list,watch,get",
        "Resources": "issuers,clusterissuers",
        "API groups": "cert-manager.io"
    },
    {
        "verbs": "list,watch,get",
        "Resources": "issuers",
        "API groups": "cert-manager.io"
    },
    {
        "verbs": "list,watch,get",
        "Resources": "secrets",
        "API groups": ""
    },
    {
        "verbs": "patch,create",
        "Resources": "events",
        "API groups": ""
    },
    {
        "verbs": "patch,update",
        "Resources": "certificates/status,certificaterequests,certificates,certificaterequests/status",
        "API groups": "cert-manager.io"
    },
    {
        "verbs": "patch,update",
        "Resources": "certificatesigningrequests/status",
        "API groups": "certificates.k8s.io"
    },
    {
        "verbs": "patch,update",
        "Resources": "challenges,challenges/status",
        "API groups": "acme.cert-manager.io"
    },
    {
        "verbs": "patch,update",
        "Resources": "clusterissuers,clusterissuers/status",
        "API groups": "cert-manager.io"
    },
    {
        "verbs": "patch,update",
        "Resources": "issuers/status,issuers",
        "API groups": "cert-manager.io"
    },
    {
        "verbs": "patch,update",
        "Resources": "orders/status,orders",
        "API groups": "acme.cert-manager.io"
    },
    {
        "verbs": "sign",
        "Resources": "signers",
        "API groups": "certificates.k8s.io"
    },
    {
        "verbs": "update,list,watch,get",
        "Resources": "certificatesigningrequests",
        "API groups": "certificates.k8s.io"
    },
    {
        "verbs": "update",
        "Resources": "certificates/finalizers,certificaterequests/finalizers",
        "API groups": "cert-manager.io"
    },
    {
        "verbs": "update",
        "Resources": "challenges/finalizers",
        "API groups": "acme.cert-manager.io"
    },
    {
        "verbs": "update",
        "Resources": "httproutes/finalizers,gateways/finalizers",
        "API groups": "gateway.networking.k8s.io"
    },
    {
        "verbs": "update",
        "Resources": "ingresses/finalizers",
        "API groups": "networking.k8s.io"
    },
    {
        "verbs": "update",
        "Resources": "orders/finalizers",
        "API groups": "acme.cert-manager.io"
    }
]
    [cluster role over-privileged permissions]: [
    {
        "verbs": "patch",
        "Resources": "secrets",
        "API groups": ""
    },
    {
        "verbs": "watch",
        "Resources": "secrets",
        "API groups": ""
    },
    {
        "verbs": "list",
        "Resources": "secrets",
        "API groups": ""
    },
    {
        "verbs": "create",
        "Resources": "pods",
        "API groups": ""
    },
    {
        "verbs": "update",
        "Resources": "secrets",
        "API groups": ""
    },
    {
        "verbs": "get",
        "Resources": "secrets",
        "API groups": ""
    }
]

    [rolePermissions] (default): [
    {
        "verbs": "create",
        "Resources": "leases",
        "API groups": "coordination.k8s.io"
    },
    {
        "verbs": "patch,update,get",
        "Resources": "leases",
        "API groups": "coordination.k8s.io"
    }
]
    [role over-privileged permissions]: [] 

  [Role Details]:
    [clusterRoles]: [release-name-cert-manager-controller-approve:cert-manager-io; release-name-cert-manager-controller-certificates; release-name-cert-manager-controller-certificatesigningrequests; release-name-cert-manager-controller-challenges; release-name-cert-manager-controller-clusterissuers; release-name-cert-manager-controller-ingress-shim; release-name-cert-manager-controller-issuers; release-name-cert-manager-controller-orders] [Main configs]
    [clusterRoleBindings]: [ServiceAccount/release-name-cert-manager] [Main configs]

    [roles]: [release-name-cert-manager:leaderelection] [Main configs]
    [roleBindings]: [ServiceAccount/release-name-cert-manager] [Main configs]
    [clusterResourceNames]: issuers.cert-manager.io/*,clusterissuers.cert-manager.io/*
    [roleResourceNames]: cert-manager-controller
-------------------------------------------

[Service Account]: release-name-grafana
  [Resource] (ResourceName/ResourceType): release-name-grafana/Deployment

  [Permissions]:
    [clusterPermissions]: []
    [cluster role over-privileged permissions]: [] 

    [rolePermissions] (default): []
    [role over-privileged permissions]: [] 

  [Role Details]:
    [clusterRoles]: [release-name-grafana-clusterrole] []
    [clusterRoleBindings]: [ServiceAccount/release-name-grafana] [Main configs]

    [roles]: [release-name-grafana] []
    [roleBindings]: [ServiceAccount/release-name-grafana] [Main configs]
-------------------------------------------

[Service Account]: release-name-cert-manager-webhook
  [Resource] (ResourceName/ResourceType): release-name-cert-manager-webhook/Deployment

  [Permissions]:
    [clusterPermissions]: [
    {
        "verbs": "create",
        "Resources": "subjectaccessreviews",
        "API groups": "authorization.k8s.io"
    }
]
    [cluster role over-privileged permissions]: [] 

    [rolePermissions] (default): [
    {
        "verbs": "create",
        "Resources": "secrets",
        "API groups": "core"
    },
    {
        "verbs": "update,list,watch,get",
        "Resources": "secrets",
        "API groups": "core"
    }
]
    [role over-privileged permissions]: [
    {
        "verbs": "get",
        "Resources": "secrets",
        "API groups": "core"
    },
    {
        "verbs": "list",
        "Resources": "secrets",
        "API groups": "core"
    },
    {
        "verbs": "update",
        "Resources": "secrets",
        "API groups": "core"
    },
    {
        "verbs": "watch",
        "Resources": "secrets",
        "API groups": "core"
    }
]

  [Role Details]:
    [clusterRoles]: [release-name-cert-manager-webhook:subjectaccessreviews] [Main configs]
    [clusterRoleBindings]: [ServiceAccount/release-name-cert-manager-webhook] [Main configs]

    [roles]: [release-name-cert-manager-webhook:dynamic-serving] [Main configs]
    [roleBindings]: [ServiceAccount/release-name-cert-manager-webhook] [Main configs]
    [roleResourceNames]: release-name-cert-manager-webhook-ca
-------------------------------------------

[Service Account]: release-name-ingress-nginx-admission
  [Resource] (ResourceName/ResourceType): active/default

  [Permissions]:
    [clusterPermissions]: [
    {
        "verbs": "update,get",
        "Resources": "validatingwebhookconfigurations",
        "API groups": "admissionregistration.k8s.io"
    }
]
    [cluster role over-privileged permissions]: [] 

    [rolePermissions] (default): [
    {
        "verbs": "create,get",
        "Resources": "secrets",
        "API groups": "core"
    }
]
    [role over-privileged permissions]: [
    {
        "verbs": "get",
        "Resources": "secrets",
        "API groups": "core"
    }
]

  [Role Details]:
    [clusterRoles]: [release-name-ingress-nginx-admission] [Main configs]
    [clusterRoleBindings]: [ServiceAccount/release-name-ingress-nginx-admission] [Main configs]

    [roles]: [release-name-ingress-nginx-admission] [Main configs]
    [roleBindings]: [ServiceAccount/release-name-ingress-nginx-admission] [Main configs]
-------------------------------------------

