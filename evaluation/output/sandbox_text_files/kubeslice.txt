[Service Account]: kubeslice-cleanup
  [Resource] (ResourceName/ResourceType): active/default

  [Permissions]:
    [clusterPermissions]: [
    {
        "verbs": "delete,get,create,update,list,patch",
        "Resources": "configmaps",
        "API groups": ""
    }
]
    [cluster role over-privileged permissions]: [] 

    [rolePermissions] (default): []
    [role over-privileged permissions]: [] 

  [Role Details]:
    [clusterRoles]: [kubeslice-cleanup] [Main configs]
    [clusterRoleBindings]: [ServiceAccount/kubeslice-cleanup] [Main configs]

    [roles]: [] []
    [roleBindings]: [] []
-------------------------------------------

[Service Account]: istiod
  [Resource] (ResourceName/ResourceType): istiod/Deployment

  [Permissions]:
    [clusterPermissions]: [
    {
        "verbs": "*",
        "Resources": "ingresses/status",
        "API groups": "networking.k8s.io"
    },
    {
        "verbs": "approve",
        "Resources": "signers",
        "API groups": "certificates.k8s.io"
    },
    {
        "verbs": "create",
        "Resources": "subjectaccessreviews",
        "API groups": "authorization.k8s.io"
    },
    {
        "verbs": "create",
        "Resources": "tokenreviews",
        "API groups": "authentication.k8s.io"
    },
    {
        "verbs": "delete,get,create,watch,list,update,patch",
        "Resources": "deployments",
        "API groups": "apps"
    },
    {
        "verbs": "delete,get,create,watch,list,update,patch",
        "Resources": "services",
        "API groups": ""
    },
    {
        "verbs": "delete,get,create,watch,list,update,patch",
        "Resources": "workloadentries/status",
        "API groups": "networking.istio.io"
    },
    {
        "verbs": "delete,get,create,watch,list,update,patch",
        "Resources": "workloadentries",
        "API groups": "networking.istio.io"
    },
    {
        "verbs": "delete,get,create,watch,list",
        "Resources": "serviceexports",
        "API groups": "multicluster.x-k8s.io"
    },
    {
        "verbs": "delete,get,create,watch,update",
        "Resources": "certificatesigningrequests,certificatesigningrequests/status,certificatesigningrequests/approval",
        "API groups": "certificates.k8s.io"
    },
    {
        "verbs": "get,create,watch,list,update",
        "Resources": "configmaps",
        "API groups": ""
    },
    {
        "verbs": "get,watch,list,update,patch",
        "Resources": "mutatingwebhookconfigurations",
        "API groups": "admissionregistration.k8s.io"
    },
    {
        "verbs": "patch,create,delete,update",
        "Resources": "gatewayclasses",
        "API groups": "gateway.networking.k8s.io"
    },
    {
        "verbs": "patch,update",
        "Resources": "*",
        "API groups": "networking.x-k8s.io,gateway.networking.k8s.io"
    },
    {
        "verbs": "watch,list,get",
        "Resources": "*",
        "API groups": "networking.x-k8s.io,gateway.networking.k8s.io"
    },
    {
        "verbs": "watch,list,get",
        "Resources": "*",
        "API groups": "telemetry.istio.io,networking.istio.io,authentication.istio.io,extensions.istio.io,rbac.istio.io,config.istio.io,security.istio.io"
    },
    {
        "verbs": "watch,list,get",
        "Resources": "customresourcedefinitions",
        "API groups": "apiextensions.k8s.io"
    },
    {
        "verbs": "watch,list,get",
        "Resources": "endpointslices",
        "API groups": "discovery.k8s.io"
    },
    {
        "verbs": "watch,list,get",
        "Resources": "ingressclasses,ingresses",
        "API groups": "networking.k8s.io"
    },
    {
        "verbs": "watch,list,get",
        "Resources": "nodes,namespaces,services,pods,endpoints",
        "API groups": ""
    },
    {
        "verbs": "watch,list,get",
        "Resources": "secrets",
        "API groups": ""
    },
    {
        "verbs": "watch,list,get",
        "Resources": "serviceimports",
        "API groups": "multicluster.x-k8s.io"
    },
    {
        "verbs": "watch,list,update,get",
        "Resources": "validatingwebhookconfigurations",
        "API groups": "admissionregistration.k8s.io"
    }
]
    [cluster role over-privileged permissions]: [
    {
        "verbs": "create",
        "Resources": "deployments",
        "API groups": "apps"
    },
    {
        "verbs": "update",
        "Resources": "deployments",
        "API groups": "apps"
    },
    {
        "verbs": "patch",
        "Resources": "deployments",
        "API groups": "apps"
    },
    {
        "verbs": "watch",
        "Resources": "secrets",
        "API groups": ""
    },
    {
        "verbs": "list",
        "Resources": "secrets",
        "API groups": ""
    },
    {
        "verbs": "get",
        "Resources": "secrets",
        "API groups": ""
    }
]

    [rolePermissions] (default): []
    [role over-privileged permissions]: [] 

  [Role Details]:
    [clusterRoles]: [istiod-clusterrole-istio-system; istiod-gateway-controller-istio-system] [Main configs]
    [clusterRoleBindings]: [ServiceAccount/istiod] [Main configs]

    [roles]: [] []
    [roleBindings]: [] []
    [clusterResourceNames]: kubernetes.io/legacy-unknown
-------------------------------------------

[Service Account]: spire-server
  [Resource] (ResourceName/ResourceType): spire-server/StatefulSet

  [Permissions]:
    [clusterPermissions]: [
    {
        "verbs": "create,get",
        "Resources": "tokenreviews",
        "API groups": "authentication.k8s.io"
    },
    {
        "verbs": "delete,get,create,watch,list,update,patch",
        "Resources": "clusterfederatedtrustdomains",
        "API groups": "spire.spiffe.io"
    },
    {
        "verbs": "delete,get,create,watch,list,update,patch",
        "Resources": "clusterspiffeids",
        "API groups": "spire.spiffe.io"
    },
    {
        "verbs": "get",
        "Resources": "nodes",
        "API groups": ""
    },
    {
        "verbs": "patch,update,get",
        "Resources": "clusterfederatedtrustdomains/status",
        "API groups": "spire.spiffe.io"
    },
    {
        "verbs": "patch,update,get",
        "Resources": "clusterspiffeids/status",
        "API groups": "spire.spiffe.io"
    },
    {
        "verbs": "patch,watch,list,get",
        "Resources": "mutatingwebhookconfigurations",
        "API groups": "admissionregistration.k8s.io"
    },
    {
        "verbs": "patch,watch,list,get",
        "Resources": "validatingwebhookconfigurations",
        "API groups": "admissionregistration.k8s.io"
    },
    {
        "verbs": "update",
        "Resources": "clusterfederatedtrustdomains/finalizers",
        "API groups": "spire.spiffe.io"
    },
    {
        "verbs": "update",
        "Resources": "clusterspiffeids/finalizers",
        "API groups": "spire.spiffe.io"
    },
    {
        "verbs": "watch,list,get",
        "Resources": "namespaces",
        "API groups": ""
    },
    {
        "verbs": "watch,list,get",
        "Resources": "nodes",
        "API groups": ""
    },
    {
        "verbs": "watch,list,get",
        "Resources": "pods",
        "API groups": ""
    }
]
    [cluster role over-privileged permissions]: [] 

    [rolePermissions] (default): []
    [role over-privileged permissions]: [] 

  [Role Details]:
    [clusterRoles]: [manager-role; spire-server-trust-role] [Main configs]
    [clusterRoleBindings]: [ServiceAccount/spire-server] [Main configs]

    [roles]: [] []
    [roleBindings]: [] []
-------------------------------------------

[Service Account]: nsmgr-acc
  [Resource] (ResourceName/ResourceType): nsmgr/DaemonSet

  [Permissions]:
    [clusterPermissions]: [
    {
        "verbs": "*",
        "Resources": "customresourcedefinitions",
        "API groups": "apiextensions.k8s.io"
    },
    {
        "verbs": "*",
        "Resources": "networkserviceendpoints,networkservices",
        "API groups": "networkservicemesh.io"
    },
    {
        "verbs": "watch,list,get",
        "Resources": "namespaces,nodes",
        "API groups": ""
    },
    {
        "verbs": "write,delete,get,read,create,watch,list,update,patch",
        "Resources": "configmaps,services,pods",
        "API groups": ""
    }
]
    [cluster role over-privileged permissions]: [
    {
        "verbs": "update",
        "Resources": "pods",
        "API groups": ""
    },
    {
        "verbs": "patch",
        "Resources": "pods",
        "API groups": ""
    },
    {
        "verbs": "create",
        "Resources": "pods",
        "API groups": ""
    }
]

    [rolePermissions] (default): []
    [role over-privileged permissions]: [] 

  [Role Details]:
    [clusterRoles]: [nsm-role] [Main configs]
    [clusterRoleBindings]: [ServiceAccount/nsmgr-acc] [Main configs]

    [roles]: [] []
    [roleBindings]: [] []
-------------------------------------------

  [Resource] (ResourceName/ResourceType): registry-k8s/Deployment

  [Permissions]:
    [clusterPermissions]: [
    {
        "verbs": "*",
        "Resources": "customresourcedefinitions",
        "API groups": "apiextensions.k8s.io"
    },
    {
        "verbs": "*",
        "Resources": "networkserviceendpoints,networkservices",
        "API groups": "networkservicemesh.io"
    },
    {
        "verbs": "watch,list,get",
        "Resources": "namespaces,nodes",
        "API groups": ""
    },
    {
        "verbs": "write,delete,get,read,create,watch,list,update,patch",
        "Resources": "configmaps,services,pods",
        "API groups": ""
    }
]
    [cluster role over-privileged permissions]: [
    {
        "verbs": "update",
        "Resources": "pods",
        "API groups": ""
    },
    {
        "verbs": "patch",
        "Resources": "pods",
        "API groups": ""
    },
    {
        "verbs": "create",
        "Resources": "pods",
        "API groups": ""
    }
]

    [rolePermissions] (default): []
    [role over-privileged permissions]: [] 

  [Role Details]:
    [clusterRoles]: [nsm-role] [Main configs]
    [clusterRoleBindings]: [ServiceAccount/nsmgr-acc] [Main configs]

    [roles]: [] []
    [roleBindings]: [] []
-------------------------------------------

[Service Account]: nsm-install-crds
  [Resource] (ResourceName/ResourceType): active/default

  [Permissions]:
    [clusterPermissions]: [
    {
        "verbs": "get,create,update,list,patch",
        "Resources": "customresourcedefinitions",
        "API groups": "apiextensions.k8s.io"
    }
]
    [cluster role over-privileged permissions]: [] 

    [rolePermissions] (default): []
    [role over-privileged permissions]: [] 

  [Role Details]:
    [clusterRoles]: [nsm-install-crds] [Main configs]
    [clusterRoleBindings]: [ServiceAccount/nsm-install-crds] [Main configs]

    [roles]: [] []
    [roleBindings]: [] []
-------------------------------------------

[Service Account]: kubeslice-install-crds
  [Resource] (ResourceName/ResourceType): active/default

  [Permissions]:
    [clusterPermissions]: [
    {
        "verbs": "get,create,update,list,patch",
        "Resources": "customresourcedefinitions",
        "API groups": "apiextensions.k8s.io"
    }
]
    [cluster role over-privileged permissions]: [] 

    [rolePermissions] (default): []
    [role over-privileged permissions]: [] 

  [Role Details]:
    [clusterRoles]: [nsm-install-crds] [Main configs]
    [clusterRoleBindings]: [ServiceAccount/kubeslice-install-crds] [Main configs]

    [roles]: [] []
    [roleBindings]: [] []
-------------------------------------------

[Service Account]: release-name-cert-manager
  [Resource] (ResourceName/ResourceType): release-name-cert-manager/Deployment

  [Permissions]:
    [clusterPermissions]: [
    {
        "verbs": "approve",
        "Resources": "signers",
        "API groups": "cert-manager.io"
    },
    {
        "verbs": "create,delete,update",
        "Resources": "certificaterequests,certificates",
        "API groups": "cert-manager.io"
    },
    {
        "verbs": "create,delete",
        "Resources": "challenges",
        "API groups": "acme.cert-manager.io"
    },
    {
        "verbs": "create",
        "Resources": "routes/custom-host",
        "API groups": "route.openshift.io"
    },
    {
        "verbs": "create",
        "Resources": "subjectaccessreviews",
        "API groups": "authorization.k8s.io"
    },
    {
        "verbs": "delete,get,create,watch,list,update,patch",
        "Resources": "secrets",
        "API groups": ""
    },
    {
        "verbs": "delete,get,create,watch,list,update",
        "Resources": "httproutes",
        "API groups": "networking.x-k8s.io"
    },
    {
        "verbs": "delete,get,create,watch,list,update",
        "Resources": "ingresses",
        "API groups": "networking.k8s.io"
    },
    {
        "verbs": "delete,get,create,watch,list,update",
        "Resources": "secrets",
        "API groups": ""
    },
    {
        "verbs": "delete,get,create,watch,list",
        "Resources": "orders",
        "API groups": "acme.cert-manager.io"
    },
    {
        "verbs": "delete,get,create,watch,list",
        "Resources": "services,pods",
        "API groups": ""
    },
    {
        "verbs": "patch,create",
        "Resources": "events",
        "API groups": ""
    },
    {
        "verbs": "sign",
        "Resources": "signers",
        "API groups": "certificates.k8s.io"
    },
    {
        "verbs": "update",
        "Resources": "certificaterequests/finalizers,certificates/finalizers",
        "API groups": "cert-manager.io"
    },
    {
        "verbs": "update",
        "Resources": "certificaterequests/status,certificaterequests,certificates/status,certificates",
        "API groups": "cert-manager.io"
    },
    {
        "verbs": "update",
        "Resources": "certificatesigningrequests/status",
        "API groups": "certificates.k8s.io"
    },
    {
        "verbs": "update",
        "Resources": "challenges,challenges/status",
        "API groups": "acme.cert-manager.io"
    },
    {
        "verbs": "update",
        "Resources": "challenges/finalizers",
        "API groups": "acme.cert-manager.io"
    },
    {
        "verbs": "update",
        "Resources": "clusterissuers/status,clusterissuers",
        "API groups": "cert-manager.io"
    },
    {
        "verbs": "update",
        "Resources": "httproutes/finalizers,gateways/finalizers",
        "API groups": "networking.x-k8s.io"
    },
    {
        "verbs": "update",
        "Resources": "ingresses/finalizers",
        "API groups": "networking.k8s.io"
    },
    {
        "verbs": "update",
        "Resources": "issuers,issuers/status",
        "API groups": "cert-manager.io"
    },
    {
        "verbs": "update",
        "Resources": "orders,orders/status",
        "API groups": "acme.cert-manager.io"
    },
    {
        "verbs": "update",
        "Resources": "orders/finalizers",
        "API groups": "acme.cert-manager.io"
    },
    {
        "verbs": "watch,list,get",
        "Resources": "challenges",
        "API groups": "acme.cert-manager.io"
    },
    {
        "verbs": "watch,list,get",
        "Resources": "clusterissuers",
        "API groups": "cert-manager.io"
    },
    {
        "verbs": "watch,list,get",
        "Resources": "httproutes,gateways",
        "API groups": "networking.x-k8s.io"
    },
    {
        "verbs": "watch,list,get",
        "Resources": "ingresses",
        "API groups": "networking.k8s.io"
    },
    {
        "verbs": "watch,list,get",
        "Resources": "issuers,certificaterequests,clusterissuers,certificates",
        "API groups": "cert-manager.io"
    },
    {
        "verbs": "watch,list,get",
        "Resources": "issuers,clusterissuers",
        "API groups": "cert-manager.io"
    },
    {
        "verbs": "watch,list,get",
        "Resources": "issuers",
        "API groups": "cert-manager.io"
    },
    {
        "verbs": "watch,list,get",
        "Resources": "orders,challenges",
        "API groups": "acme.cert-manager.io"
    },
    {
        "verbs": "watch,list,get",
        "Resources": "secrets",
        "API groups": ""
    },
    {
        "verbs": "watch,list,update,get",
        "Resources": "certificatesigningrequests",
        "API groups": "certificates.k8s.io"
    }
]
    [cluster role over-privileged permissions]: [
    {
        "verbs": "watch",
        "Resources": "secrets",
        "API groups": ""
    },
    {
        "verbs": "list",
        "Resources": "secrets",
        "API groups": ""
    },
    {
        "verbs": "patch",
        "Resources": "secrets",
        "API groups": ""
    },
    {
        "verbs": "update",
        "Resources": "secrets",
        "API groups": ""
    },
    {
        "verbs": "get",
        "Resources": "secrets",
        "API groups": ""
    },
    {
        "verbs": "create",
        "Resources": "pods",
        "API groups": ""
    }
]

    [rolePermissions] (default): [
    {
        "verbs": "create",
        "Resources": "configmaps",
        "API groups": "core"
    },
    {
        "verbs": "create",
        "Resources": "leases",
        "API groups": "coordination.k8s.io"
    },
    {
        "verbs": "patch,update,get",
        "Resources": "configmaps",
        "API groups": "core"
    },
    {
        "verbs": "patch,update,get",
        "Resources": "leases",
        "API groups": "coordination.k8s.io"
    }
]
    [role over-privileged permissions]: [] 

  [Role Details]:
    [clusterRoles]: [release-name-cert-manager-controller-approve:cert-manager-io; release-name-cert-manager-controller-certificates; release-name-cert-manager-controller-certificatesigningrequests; release-name-cert-manager-controller-challenges; release-name-cert-manager-controller-clusterissuers; release-name-cert-manager-controller-ingress-shim; release-name-cert-manager-controller-issuers; release-name-cert-manager-controller-orders] [Main configs]
    [clusterRoleBindings]: [ServiceAccount/release-name-cert-manager] [Main configs]

    [roles]: [release-name-cert-manager:leaderelection] [Main configs]
    [roleBindings]: [ServiceAccount/release-name-cert-manager] [Main configs]
    [clusterResourceNames]: issuers.cert-manager.io/*,clusterissuers.cert-manager.io/*
    [roleResourceNames]: cert-manager-controller
-------------------------------------------

[Service Account]: release-name-prometheus-server
  [Resource] (ResourceName/ResourceType): release-name-prometheus-server/Deployment

  [Permissions]:
    [clusterPermissions]: [
    {
        "verbs": "get",
        "Resources": "",
        "API groups": "core"
    },
    {
        "verbs": "watch,list,get",
        "Resources": "ingresses/status,ingresses",
        "API groups": "extensions,networking.k8s.io"
    },
    {
        "verbs": "watch,list,get",
        "Resources": "nodes/proxy,nodes/metrics,nodes,ingresses,services,pods,endpoints,configmaps",
        "API groups": ""
    }
]
    [cluster role over-privileged permissions]: [] 

    [rolePermissions] (default): []
    [role over-privileged permissions]: [] 

  [Role Details]:
    [clusterRoles]: [release-name-prometheus-server] [Main configs]
    [clusterRoleBindings]: [ServiceAccount/release-name-prometheus-server] [Main configs]

    [roles]: [] []
    [roleBindings]: [] []
-------------------------------------------

[Service Account]: kubeslice-controller-controller-manager
  [Resource] (ResourceName/ResourceType): active/default

  [Permissions]:
    [clusterPermissions]: [
    {
        "verbs": "create",
        "Resources": "subjectaccessreviews",
        "API groups": "authorization.k8s.io"
    },
    {
        "verbs": "create",
        "Resources": "tokenreviews",
        "API groups": "authentication.k8s.io"
    },
    {
        "verbs": "delete,get,create,watch,list,update,patch,escalate",
        "Resources": "namespaces",
        "API groups": ""
    },
    {
        "verbs": "delete,get,create,watch,list,update,patch,escalate",
        "Resources": "secrets",
        "API groups": ""
    },
    {
        "verbs": "delete,get,create,watch,list,update,patch",
        "Resources": "clusterroles,roles,rolebindings",
        "API groups": "rbac.authorization.k8s.io"
    },
    {
        "verbs": "delete,get,create,watch,list,update,patch",
        "Resources": "jobs",
        "API groups": "batch"
    },
    {
        "verbs": "delete,get,create,watch,list,update,patch",
        "Resources": "serviceaccounts",
        "API groups": ""
    },
    {
        "verbs": "delete,get,create,watch,list,update,patch",
        "Resources": "serviceexportconfigs,projects,sliceqosconfigs,clusters,vpnkeyrotations,sliceconfigs",
        "API groups": "controller.kubeslice.io"
    },
    {
        "verbs": "delete,get,create,watch,list,update,patch",
        "Resources": "workerserviceimports,workerslicegateways,workersliceconfigs,workerslicegwrecyclers",
        "API groups": "worker.kubeslice.io"
    },
    {
        "verbs": "get,create,watch,list,update,patch,escalate",
        "Resources": "events",
        "API groups": ""
    },
    {
        "verbs": "patch,update,get",
        "Resources": "clusters/status,sliceconfigs/status,serviceexportconfigs/status,sliceqosconfigs/status,projects/status,vpnkeyrotations/status",
        "API groups": "controller.kubeslice.io"
    },
    {
        "verbs": "patch,update,get",
        "Resources": "workerslicegateways/status,workerserviceimports/status,workersliceconfigs/status,workerslicegwrecyclers/status",
        "API groups": "worker.kubeslice.io"
    },
    {
        "verbs": "update",
        "Resources": "clusters/finalizers,sliceconfigs/finalizers,serviceexportconfigs/finalizers,vpnkeyrotations/finalizers,projects/finalizers,sliceqosconfigs/finalizers",
        "API groups": "controller.kubeslice.io"
    },
    {
        "verbs": "update",
        "Resources": "workersliceconfigs/finalizers,workerslicegateways/finalizers,workerslicegwrecyclers/finalizers,workerserviceimports/finalizers",
        "API groups": "worker.kubeslice.io"
    }
]
    [cluster role over-privileged permissions]: [
    {
        "verbs": "create",
        "Resources": "jobs",
        "API groups": "batch"
    },
    {
        "verbs": "watch",
        "Resources": "secrets",
        "API groups": ""
    },
    {
        "verbs": "list",
        "Resources": "secrets",
        "API groups": ""
    },
    {
        "verbs": "patch",
        "Resources": "secrets",
        "API groups": ""
    },
    {
        "verbs": "update",
        "Resources": "jobs",
        "API groups": "batch"
    },
    {
        "verbs": "update",
        "Resources": "secrets",
        "API groups": ""
    },
    {
        "verbs": "patch",
        "Resources": "jobs",
        "API groups": "batch"
    },
    {
        "verbs": "get",
        "Resources": "secrets",
        "API groups": ""
    }
]

    [rolePermissions] (default): []
    [role over-privileged permissions]: [] 

  [Role Details]:
    [clusterRoles]: [kubeslice-controller-controller-role; kubeslice-controller-proxy-role] [Main configs]
    [clusterRoleBindings]: [ServiceAccount/kubeslice-controller-controller-manager] [Main configs]

    [roles]: [] []
    [roleBindings]: [] []
-------------------------------------------

[Service Account]: istiod-service-account
  [Resource] (ResourceName/ResourceType): active/default

  [Permissions]:
    [clusterPermissions]: [
    {
        "verbs": "*",
        "Resources": "ingresses/status",
        "API groups": "networking.k8s.io"
    },
    {
        "verbs": "approve",
        "Resources": "signers",
        "API groups": "certificates.k8s.io"
    },
    {
        "verbs": "create",
        "Resources": "subjectaccessreviews",
        "API groups": "authorization.k8s.io"
    },
    {
        "verbs": "create",
        "Resources": "tokenreviews",
        "API groups": "authentication.k8s.io"
    },
    {
        "verbs": "delete,get,create,watch,list,update,patch",
        "Resources": "workloadentries/status",
        "API groups": "networking.istio.io"
    },
    {
        "verbs": "delete,get,create,watch,list,update,patch",
        "Resources": "workloadentries",
        "API groups": "networking.istio.io"
    },
    {
        "verbs": "delete,get,create,watch,list",
        "Resources": "serviceexports",
        "API groups": "multicluster.x-k8s.io"
    },
    {
        "verbs": "delete,get,create,watch,update",
        "Resources": "certificatesigningrequests,certificatesigningrequests/status,certificatesigningrequests/approval",
        "API groups": "certificates.k8s.io"
    },
    {
        "verbs": "get,create,watch,list,update",
        "Resources": "configmaps",
        "API groups": ""
    },
    {
        "verbs": "get,watch,list,update,patch",
        "Resources": "mutatingwebhookconfigurations",
        "API groups": "admissionregistration.k8s.io"
    },
    {
        "verbs": "patch,create,delete,update",
        "Resources": "gatewayclasses",
        "API groups": "gateway.networking.k8s.io"
    },
    {
        "verbs": "update",
        "Resources": "*",
        "API groups": "networking.x-k8s.io,gateway.networking.k8s.io"
    },
    {
        "verbs": "watch,list,get",
        "Resources": "*",
        "API groups": "networking.x-k8s.io,gateway.networking.k8s.io"
    },
    {
        "verbs": "watch,list,get",
        "Resources": "*",
        "API groups": "telemetry.istio.io,networking.istio.io,authentication.istio.io,rbac.istio.io,config.istio.io,security.istio.io"
    },
    {
        "verbs": "watch,list,get",
        "Resources": "customresourcedefinitions",
        "API groups": "apiextensions.k8s.io"
    },
    {
        "verbs": "watch,list,get",
        "Resources": "endpointslices",
        "API groups": "discovery.k8s.io"
    },
    {
        "verbs": "watch,list,get",
        "Resources": "ingressclasses,ingresses",
        "API groups": "networking.k8s.io"
    },
    {
        "verbs": "watch,list,get",
        "Resources": "nodes,namespaces,services,pods,endpoints",
        "API groups": ""
    },
    {
        "verbs": "watch,list,get",
        "Resources": "secrets",
        "API groups": ""
    },
    {
        "verbs": "watch,list,get",
        "Resources": "serviceimports",
        "API groups": "multicluster.x-k8s.io"
    },
    {
        "verbs": "watch,list,update,get",
        "Resources": "validatingwebhookconfigurations",
        "API groups": "admissionregistration.k8s.io"
    }
]
    [cluster role over-privileged permissions]: [
    {
        "verbs": "get",
        "Resources": "secrets",
        "API groups": ""
    },
    {
        "verbs": "watch",
        "Resources": "secrets",
        "API groups": ""
    },
    {
        "verbs": "list",
        "Resources": "secrets",
        "API groups": ""
    }
]

    [rolePermissions] (default): []
    [role over-privileged permissions]: [] 

  [Role Details]:
    [clusterRoles]: [istiod-istio-system] [Main configs]
    [clusterRoleBindings]: [ServiceAccount/istiod-service-account] [Main configs]

    [roles]: [] []
    [roleBindings]: [] []
    [clusterResourceNames]: kubernetes.io/legacy-unknown
-------------------------------------------

[Service Account]: kubeslice-controller-manager
  [Resource] (ResourceName/ResourceType): kubeslice-operator/Deployment

  [Permissions]:
    [clusterPermissions]: [
    {
        "verbs": "create,delete,list",
        "Resources": "poddisruptionbudgets",
        "API groups": "policy"
    },
    {
        "verbs": "create",
        "Resources": "subjectaccessreviews",
        "API groups": "authorization.k8s.io"
    },
    {
        "verbs": "create",
        "Resources": "tokenreviews",
        "API groups": "authentication.k8s.io"
    },
    {
        "verbs": "delete,get,create,update,list,patch",
        "Resources": "clusterrolebindings,clusterroles,roles,rolebindings",
        "API groups": "rbac.authorization.k8s.io"
    },
    {
        "verbs": "delete,get,create,watch,list,update,deletecollection,patch",
        "Resources": "pods",
        "API groups": ""
    },
    {
        "verbs": "delete,get,create,watch,list,update,patch",
        "Resources": "*",
        "API groups": ",events.k8s.io,policy,rbac.authorization.k8s.io,apps,extensions,batch,networking.k8s.io,authorization.k8s.io,discovery.k8s.io,coordination.k8s.io,autoscaling"
    },
    {
        "verbs": "delete,get,create,watch,list,update,patch",
        "Resources": "configmaps",
        "API groups": ""
    },
    {
        "verbs": "delete,get,create,watch,list,update,patch",
        "Resources": "daemonsets",
        "API groups": "apps"
    },
    {
        "verbs": "delete,get,create,watch,list,update,patch",
        "Resources": "deployments",
        "API groups": "apps"
    },
    {
        "verbs": "delete,get,create,watch,list,update,patch",
        "Resources": "endpoints",
        "API groups": ""
    },
    {
        "verbs": "delete,get,create,watch,list,update,patch",
        "Resources": "namespaces",
        "API groups": ""
    },
    {
        "verbs": "delete,get,create,watch,list,update,patch",
        "Resources": "networkpolicies",
        "API groups": "networking.k8s.io"
    },
    {
        "verbs": "delete,get,create,watch,list,update,patch",
        "Resources": "networkserviceendpoints,networkservices",
        "API groups": "networkservicemesh.io"
    },
    {
        "verbs": "delete,get,create,watch,list,update,patch",
        "Resources": "replicasets",
        "API groups": "apps"
    },
    {
        "verbs": "delete,get,create,watch,list,update,patch",
        "Resources": "rolebindings",
        "API groups": "rbac.authorization.k8s.io"
    },
    {
        "verbs": "delete,get,create,watch,list,update,patch",
        "Resources": "roles",
        "API groups": "rbac.authorization.k8s.io"
    },
    {
        "verbs": "delete,get,create,watch,list,update,patch",
        "Resources": "secrets",
        "API groups": ""
    },
    {
        "verbs": "delete,get,create,watch,list,update,patch",
        "Resources": "serviceaccounts",
        "API groups": ""
    },
    {
        "verbs": "delete,get,create,watch,list,update,patch",
        "Resources": "serviceexports",
        "API groups": "networking.kubeslice.io"
    },
    {
        "verbs": "delete,get,create,watch,list,update,patch",
        "Resources": "serviceimports",
        "API groups": "networking.kubeslice.io"
    },
    {
        "verbs": "delete,get,create,watch,list,update,patch",
        "Resources": "services",
        "API groups": ""
    },
    {
        "verbs": "delete,get,create,watch,list,update,patch",
        "Resources": "slicegateways",
        "API groups": "networking.kubeslice.io"
    },
    {
        "verbs": "delete,get,create,watch,list,update,patch",
        "Resources": "slices",
        "API groups": "networking.kubeslice.io"
    },
    {
        "verbs": "delete,get,create,watch,list,update,patch",
        "Resources": "spiffeids",
        "API groups": "spiffeid.spiffe.io"
    },
    {
        "verbs": "delete,get,create,watch,list,update,patch",
        "Resources": "statefulsets",
        "API groups": "apps"
    },
    {
        "verbs": "delete,get,create,watch,list",
        "Resources": "*",
        "API groups": "scheduling.k8s.io,batch,apiextensions.k8s.io,admissionregistration.k8s.io"
    },
    {
        "verbs": "delete,get,create,watch,update,list",
        "Resources": "gateways",
        "API groups": "networking.istio.io"
    },
    {
        "verbs": "delete,get,create,watch,update,list",
        "Resources": "serviceentries",
        "API groups": "networking.istio.io"
    },
    {
        "verbs": "delete,get,create,watch,update,list",
        "Resources": "virtualservices",
        "API groups": "networking.istio.io"
    },
    {
        "verbs": "patch,update,get",
        "Resources": "serviceexports/status",
        "API groups": "networking.kubeslice.io"
    },
    {
        "verbs": "patch,update,get",
        "Resources": "serviceimports/status",
        "API groups": "networking.kubeslice.io"
    },
    {
        "verbs": "patch,update,get",
        "Resources": "slicegateways/status",
        "API groups": "networking.kubeslice.io"
    },
    {
        "verbs": "patch,update,get",
        "Resources": "slices/status",
        "API groups": "networking.kubeslice.io"
    },
    {
        "verbs": "patch,update,get",
        "Resources": "spiffeids/status",
        "API groups": "spiffeid.spiffe.io"
    },
    {
        "verbs": "update",
        "Resources": "slicegateways/finalizers",
        "API groups": "networking.kubeslice.io"
    },
    {
        "verbs": "update",
        "Resources": "slices/finalizers",
        "API groups": "networking.kubeslice.io"
    },
    {
        "verbs": "watch,list,get",
        "Resources": "nodes",
        "API groups": ""
    }
]
    [cluster role over-privileged permissions]: [
    {
        "verbs": "watch",
        "Resources": "*",
        "API groups": "admissionregistration.k8s.io"
    },
    {
        "verbs": "patch",
        "Resources": "secrets",
        "API groups": ""
    },
    {
        "verbs": "list",
        "Resources": "secrets",
        "API groups": ""
    },
    {
        "verbs": "patch",
        "Resources": "pods",
        "API groups": ""
    },
    {
        "verbs": "get",
        "Resources": "*",
        "API groups": "rbac.authorization.k8s.io"
    },
    {
        "verbs": "list",
        "Resources": "*",
        "API groups": "admissionregistration.k8s.io"
    },
    {
        "verbs": "get",
        "Resources": "*",
        "API groups": "apps"
    },
    {
        "verbs": "get",
        "Resources": "*",
        "API groups": "admissionregistration.k8s.io"
    },
    {
        "verbs": "list",
        "Resources": "*",
        "API groups": "apps"
    },
    {
        "verbs": "update",
        "Resources": "statefulsets",
        "API groups": "apps"
    },
    {
        "verbs": "watch",
        "Resources": "*",
        "API groups": ""
    },
    {
        "verbs": "create",
        "Resources": "deployments",
        "API groups": "apps"
    },
    {
        "verbs": "watch",
        "Resources": "*",
        "API groups": "apps"
    },
    {
        "verbs": "list",
        "Resources": "*",
        "API groups": "policy"
    },
    {
        "verbs": "get",
        "Resources": "*",
        "API groups": "autoscaling"
    },
    {
        "verbs": "get",
        "Resources": "*",
        "API groups": ""
    },
    {
        "verbs": "patch",
        "Resources": "replicasets",
        "API groups": "apps"
    },
    {
        "verbs": "list",
        "Resources": "*",
        "API groups": "batch"
    },
    {
        "verbs": "update",
        "Resources": "pods",
        "API groups": ""
    },
    {
        "verbs": "list",
        "Resources": "*",
        "API groups": ""
    },
    {
        "verbs": "create",
        "Resources": "pods",
        "API groups": ""
    },
    {
        "verbs": "create",
        "Resources": "daemonsets",
        "API groups": "apps"
    },
    {
        "verbs": "get",
        "Resources": "*",
        "API groups": "batch"
    },
    {
        "verbs": "get",
        "Resources": "*",
        "API groups": "policy"
    },
    {
        "verbs": "patch",
        "Resources": "daemonsets",
        "API groups": "apps"
    },
    {
        "verbs": "update",
        "Resources": "daemonsets",
        "API groups": "apps"
    },
    {
        "verbs": "watch",
        "Resources": "*",
        "API groups": "policy"
    },
    {
        "verbs": "list",
        "Resources": "*",
        "API groups": "networking.k8s.io"
    },
    {
        "verbs": "create",
        "Resources": "statefulsets",
        "API groups": "apps"
    },
    {
        "verbs": "get",
        "Resources": "*",
        "API groups": "networking.k8s.io"
    },
    {
        "verbs": "patch",
        "Resources": "statefulsets",
        "API groups": "apps"
    },
    {
        "verbs": "watch",
        "Resources": "*",
        "API groups": "autoscaling"
    },
    {
        "verbs": "list",
        "Resources": "*",
        "API groups": "rbac.authorization.k8s.io"
    },
    {
        "verbs": "list",
        "Resources": "*",
        "API groups": "autoscaling"
    },
    {
        "verbs": "update",
        "Resources": "deployments",
        "API groups": "apps"
    },
    {
        "verbs": "watch",
        "Resources": "*",
        "API groups": "batch"
    },
    {
        "verbs": "patch",
        "Resources": "deployments",
        "API groups": "apps"
    },
    {
        "verbs": "create",
        "Resources": "replicasets",
        "API groups": "apps"
    },
    {
        "verbs": "watch",
        "Resources": "secrets",
        "API groups": ""
    },
    {
        "verbs": "update",
        "Resources": "secrets",
        "API groups": ""
    },
    {
        "verbs": "get",
        "Resources": "secrets",
        "API groups": ""
    },
    {
        "verbs": "update",
        "Resources": "replicasets",
        "API groups": "apps"
    },
    {
        "verbs": "watch",
        "Resources": "*",
        "API groups": "networking.k8s.io"
    },
    {
        "verbs": "watch",
        "Resources": "*",
        "API groups": "rbac.authorization.k8s.io"
    }
]

    [rolePermissions] (default): [
    {
        "verbs": "delete,get,create,watch,list,update,patch",
        "Resources": "configmaps",
        "API groups": "core"
    },
    {
        "verbs": "delete,get,create,watch,list,update,patch",
        "Resources": "leases",
        "API groups": "coordination.k8s.io"
    },
    {
        "verbs": "patch,create",
        "Resources": "events",
        "API groups": "core"
    }
]
    [role over-privileged permissions]: [] 

  [Role Details]:
    [clusterRoles]: [kubeslice-manager-role; kubeslice-proxy-role] [Main configs]
    [clusterRoleBindings]: [ServiceAccount/kubeslice-controller-manager] [Main configs]

    [roles]: [kubeslice-leader-election-role] [Main configs]
    [roleBindings]: [ServiceAccount/kubeslice-controller-manager] [Main configs]
-------------------------------------------

[Service Account]: spire-install-clusterid-cr
  [Resource] (ResourceName/ResourceType): active/default

  [Permissions]:
    [clusterPermissions]: [
    {
        "verbs": "get,create,update,list,patch",
        "Resources": "clusterspiffeids",
        "API groups": "spire.spiffe.io"
    }
]
    [cluster role over-privileged permissions]: [] 

    [rolePermissions] (default): []
    [role over-privileged permissions]: [] 

  [Role Details]:
    [clusterRoles]: [spire-install-clusterid-cr] [Main configs]
    [clusterRoleBindings]: [ServiceAccount/spire-install-clusterid-cr] [Main configs]

    [roles]: [] []
    [roleBindings]: [] []
-------------------------------------------

[Service Account]: spire-install-crds
  [Resource] (ResourceName/ResourceType): active/default

  [Permissions]:
    [clusterPermissions]: [
    {
        "verbs": "get,create,update,list,patch",
        "Resources": "customresourcedefinitions",
        "API groups": "apiextensions.k8s.io"
    }
]
    [cluster role over-privileged permissions]: [] 

    [rolePermissions] (default): []
    [role over-privileged permissions]: [] 

  [Role Details]:
    [clusterRoles]: [spire-install-crds] [Main configs]
    [clusterRoleBindings]: [ServiceAccount/spire-install-crds] [Main configs]

    [roles]: [] []
    [roleBindings]: [] []
-------------------------------------------

[Service Account]: kubeslice-controller-ovpn-manager
  [Resource] (ResourceName/ResourceType): active/default

  [Permissions]:
    [clusterPermissions]: [
    {
        "verbs": "delete,get,create,watch,list,update,patch,escalate",
        "Resources": "secrets",
        "API groups": ""
    },
    {
        "verbs": "delete,get,create,watch,list,update,patch",
        "Resources": "workerslicegateways",
        "API groups": "worker.kubeslice.io"
    },
    {
        "verbs": "get,watch,update,list,patch,escalate",
        "Resources": "namespaces",
        "API groups": ""
    },
    {
        "verbs": "patch,update,get",
        "Resources": "workerslicegateways/status",
        "API groups": "worker.kubeslice.io"
    }
]
    [cluster role over-privileged permissions]: [
    {
        "verbs": "watch",
        "Resources": "secrets",
        "API groups": ""
    },
    {
        "verbs": "list",
        "Resources": "secrets",
        "API groups": ""
    },
    {
        "verbs": "patch",
        "Resources": "secrets",
        "API groups": ""
    },
    {
        "verbs": "update",
        "Resources": "secrets",
        "API groups": ""
    },
    {
        "verbs": "get",
        "Resources": "secrets",
        "API groups": ""
    }
]

    [rolePermissions] (default): []
    [role over-privileged permissions]: [] 

  [Role Details]:
    [clusterRoles]: [kubeslice-controller-ovpn-editor-role] [Main configs]
    [clusterRoleBindings]: [ServiceAccount/kubeslice-controller-ovpn-manager] [Main configs]

    [roles]: [] []
    [roleBindings]: [] []
-------------------------------------------

[Service Account]: release-name-cert-manager-cainjector
  [Resource] (ResourceName/ResourceType): release-name-cert-manager-cainjector/Deployment

  [Permissions]:
    [clusterPermissions]: [
    {
        "verbs": "patch,create,update,get",
        "Resources": "events",
        "API groups": ""
    },
    {
        "verbs": "watch,list,get",
        "Resources": "certificates",
        "API groups": "cert-manager.io"
    },
    {
        "verbs": "watch,list,get",
        "Resources": "secrets",
        "API groups": ""
    },
    {
        "verbs": "watch,list,update,get",
        "Resources": "apiservices",
        "API groups": "apiregistration.k8s.io"
    },
    {
        "verbs": "watch,list,update,get",
        "Resources": "auditsinks",
        "API groups": "auditregistration.k8s.io"
    },
    {
        "verbs": "watch,list,update,get",
        "Resources": "customresourcedefinitions",
        "API groups": "apiextensions.k8s.io"
    },
    {
        "verbs": "watch,list,update,get",
        "Resources": "validatingwebhookconfigurations,mutatingwebhookconfigurations",
        "API groups": "admissionregistration.k8s.io"
    }
]
    [cluster role over-privileged permissions]: [
    {
        "verbs": "get",
        "Resources": "secrets",
        "API groups": ""
    },
    {
        "verbs": "watch",
        "Resources": "secrets",
        "API groups": ""
    },
    {
        "verbs": "list",
        "Resources": "secrets",
        "API groups": ""
    }
]

    [rolePermissions] (default): [
    {
        "verbs": "create",
        "Resources": "configmaps",
        "API groups": "core"
    },
    {
        "verbs": "create",
        "Resources": "leases",
        "API groups": "coordination.k8s.io"
    },
    {
        "verbs": "patch,update,get",
        "Resources": "configmaps",
        "API groups": "core"
    },
    {
        "verbs": "patch,update,get",
        "Resources": "leases",
        "API groups": "coordination.k8s.io"
    }
]
    [role over-privileged permissions]: [] 

  [Role Details]:
    [clusterRoles]: [release-name-cert-manager-cainjector] [Main configs]
    [clusterRoleBindings]: [ServiceAccount/release-name-cert-manager-cainjector] [Main configs]

    [roles]: [release-name-cert-manager-cainjector:leaderelection] [Main configs]
    [roleBindings]: [ServiceAccount/release-name-cert-manager-cainjector] [Main configs]
    [roleResourceNames]: cert-manager-cainjector-leader-election-core,cert-manager-cainjector-leader-election
-------------------------------------------

[Service Account]: istio-reader-service-account
  [Resource] (ResourceName/ResourceType): active/default

  [Permissions]:
    [clusterPermissions]: [
    {
        "verbs": "create",
        "Resources": "subjectaccessreviews",
        "API groups": "authorization.k8s.io"
    },
    {
        "verbs": "create",
        "Resources": "tokenreviews",
        "API groups": "authentication.k8s.io"
    },
    {
        "verbs": "delete,get,create,watch,list",
        "Resources": "serviceexports",
        "API groups": "multicluster.x-k8s.io"
    },
    {
        "verbs": "watch,list,get",
        "Resources": "*",
        "API groups": "networking.istio.io,authentication.istio.io,rbac.istio.io,config.istio.io,security.istio.io"
    },
    {
        "verbs": "watch,list,get",
        "Resources": "customresourcedefinitions",
        "API groups": "apiextensions.k8s.io"
    },
    {
        "verbs": "watch,list,get",
        "Resources": "endpointslices",
        "API groups": "discovery.k8s.io"
    },
    {
        "verbs": "watch,list,get",
        "Resources": "replicasets",
        "API groups": "apps"
    },
    {
        "verbs": "watch,list,get",
        "Resources": "secrets,nodes,namespaces,services,pods,endpoints,replicationcontrollers",
        "API groups": ""
    },
    {
        "verbs": "watch,list,get",
        "Resources": "serviceexports",
        "API groups": "multicluster.x-k8s.io"
    },
    {
        "verbs": "watch,list,get",
        "Resources": "serviceimports",
        "API groups": "multicluster.x-k8s.io"
    },
    {
        "verbs": "watch,list,get",
        "Resources": "workloadentries",
        "API groups": "networking.istio.io"
    }
]
    [cluster role over-privileged permissions]: [
    {
        "verbs": "get",
        "Resources": "secrets",
        "API groups": ""
    },
    {
        "verbs": "watch",
        "Resources": "secrets",
        "API groups": ""
    },
    {
        "verbs": "list",
        "Resources": "secrets",
        "API groups": ""
    }
]

    [rolePermissions] (default): []
    [role over-privileged permissions]: [] 

  [Role Details]:
    [clusterRoles]: [istio-reader-clusterrole-istio-system; istio-reader-istio-system] [Main configs]
    [clusterRoleBindings]: [ServiceAccount/istio-reader-service-account] [Main configs]

    [roles]: [] []
    [roleBindings]: [] []
-------------------------------------------

[Service Account]: admission-webhook-sa
  [Resource] (ResourceName/ResourceType): nsm-admission-webhook-k8s/Deployment

  [Permissions]:
    [clusterPermissions]: [
    {
        "verbs": "*",
        "Resources": "mutatingwebhookconfigurations",
        "API groups": "admissionregistration.k8s.io"
    }
]
    [cluster role over-privileged permissions]: [] 

    [rolePermissions] (default): []
    [role over-privileged permissions]: [] 

  [Role Details]:
    [clusterRoles]: [admission-webhook-role] [Main configs]
    [clusterRoleBindings]: [ServiceAccount/admission-webhook-sa] [Main configs]

    [roles]: [] []
    [roleBindings]: [] []
-------------------------------------------

[Service Account]: release-name-cert-manager-webhook
  [Resource] (ResourceName/ResourceType): release-name-cert-manager-webhook/Deployment

  [Permissions]:
    [clusterPermissions]: [
    {
        "verbs": "create",
        "Resources": "subjectaccessreviews",
        "API groups": "authorization.k8s.io"
    }
]
    [cluster role over-privileged permissions]: [] 

    [rolePermissions] (default): [
    {
        "verbs": "create",
        "Resources": "secrets",
        "API groups": "core"
    },
    {
        "verbs": "watch,list,update,get",
        "Resources": "secrets",
        "API groups": "core"
    }
]
    [role over-privileged permissions]: [
    {
        "verbs": "list",
        "Resources": "secrets",
        "API groups": "core"
    },
    {
        "verbs": "watch",
        "Resources": "secrets",
        "API groups": "core"
    },
    {
        "verbs": "get",
        "Resources": "secrets",
        "API groups": "core"
    },
    {
        "verbs": "update",
        "Resources": "secrets",
        "API groups": "core"
    }
]

  [Role Details]:
    [clusterRoles]: [release-name-cert-manager-webhook:subjectaccessreviews] [Main configs]
    [clusterRoleBindings]: [ServiceAccount/release-name-cert-manager-webhook] [Main configs]

    [roles]: [release-name-cert-manager-webhook:dynamic-serving] [Main configs]
    [roleBindings]: [ServiceAccount/release-name-cert-manager-webhook] [Main configs]
    [roleResourceNames]: release-name-cert-manager-webhook-ca
-------------------------------------------

[Service Account]: release-name-kube-state-metrics
  [Resource] (ResourceName/ResourceType): release-name-kube-state-metrics/Deployment

  [Permissions]:
    [clusterPermissions]: [
    {
        "verbs": "watch,list",
        "Resources": "certificatesigningrequests",
        "API groups": "certificates.k8s.io"
    },
    {
        "verbs": "watch,list",
        "Resources": "configmaps",
        "API groups": ""
    },
    {
        "verbs": "watch,list",
        "Resources": "cronjobs",
        "API groups": "batch"
    },
    {
        "verbs": "watch,list",
        "Resources": "daemonsets",
        "API groups": "apps,extensions"
    },
    {
        "verbs": "watch,list",
        "Resources": "deployments",
        "API groups": "apps,extensions"
    },
    {
        "verbs": "watch,list",
        "Resources": "endpoints",
        "API groups": ""
    },
    {
        "verbs": "watch,list",
        "Resources": "horizontalpodautoscalers",
        "API groups": "autoscaling"
    },
    {
        "verbs": "watch,list",
        "Resources": "ingresses",
        "API groups": "extensions,networking.k8s.io"
    },
    {
        "verbs": "watch,list",
        "Resources": "jobs",
        "API groups": "batch"
    },
    {
        "verbs": "watch,list",
        "Resources": "leases",
        "API groups": "coordination.k8s.io"
    },
    {
        "verbs": "watch,list",
        "Resources": "limitranges",
        "API groups": ""
    },
    {
        "verbs": "watch,list",
        "Resources": "mutatingwebhookconfigurations",
        "API groups": "admissionregistration.k8s.io"
    },
    {
        "verbs": "watch,list",
        "Resources": "namespaces",
        "API groups": ""
    },
    {
        "verbs": "watch,list",
        "Resources": "networkpolicies",
        "API groups": "networking.k8s.io"
    },
    {
        "verbs": "watch,list",
        "Resources": "nodes",
        "API groups": ""
    },
    {
        "verbs": "watch,list",
        "Resources": "persistentvolumeclaims",
        "API groups": ""
    },
    {
        "verbs": "watch,list",
        "Resources": "persistentvolumes",
        "API groups": ""
    },
    {
        "verbs": "watch,list",
        "Resources": "poddisruptionbudgets",
        "API groups": "policy"
    },
    {
        "verbs": "watch,list",
        "Resources": "pods",
        "API groups": ""
    },
    {
        "verbs": "watch,list",
        "Resources": "replicasets",
        "API groups": "apps,extensions"
    },
    {
        "verbs": "watch,list",
        "Resources": "replicationcontrollers",
        "API groups": ""
    },
    {
        "verbs": "watch,list",
        "Resources": "resourcequotas",
        "API groups": ""
    },
    {
        "verbs": "watch,list",
        "Resources": "secrets",
        "API groups": ""
    },
    {
        "verbs": "watch,list",
        "Resources": "services",
        "API groups": ""
    },
    {
        "verbs": "watch,list",
        "Resources": "statefulsets",
        "API groups": "apps"
    },
    {
        "verbs": "watch,list",
        "Resources": "storageclasses",
        "API groups": "storage.k8s.io"
    },
    {
        "verbs": "watch,list",
        "Resources": "validatingwebhookconfigurations",
        "API groups": "admissionregistration.k8s.io"
    },
    {
        "verbs": "watch,list",
        "Resources": "volumeattachments",
        "API groups": "storage.k8s.io"
    }
]
    [cluster role over-privileged permissions]: [
    {
        "verbs": "watch",
        "Resources": "secrets",
        "API groups": ""
    },
    {
        "verbs": "list",
        "Resources": "secrets",
        "API groups": ""
    }
]

    [rolePermissions] (default): []
    [role over-privileged permissions]: [] 

  [Role Details]:
    [clusterRoles]: [release-name-kube-state-metrics] [Main configs]
    [clusterRoleBindings]: [ServiceAccount/release-name-kube-state-metrics] [Main configs]

    [roles]: [] []
    [roleBindings]: [] []
-------------------------------------------

[Service Account]: release-name-cert-manager-startupapicheck
  [Resource] (ResourceName/ResourceType): active/default

  [Permissions]:
    [clusterPermissions]: []
    [cluster role over-privileged permissions]: [] 

    [rolePermissions] (default): [
    {
        "verbs": "create",
        "Resources": "certificates",
        "API groups": "cert-manager.io"
    }
]
    [role over-privileged permissions]: [] 

  [Role Details]:
    [clusterRoles]: [] []
    [clusterRoleBindings]: [] []

    [roles]: [release-name-cert-manager-startupapicheck:create-cert] [Main configs]
    [roleBindings]: [ServiceAccount/release-name-cert-manager-startupapicheck] [Main configs]
-------------------------------------------

[Service Account]: release-name-botkube-sa
  [Resource] (ResourceName/ResourceType): release-name-botkube/Deployment

  [Permissions]:
    [clusterPermissions]: [
    {
        "verbs": "get",
        "Resources": "namespaces",
        "API groups": ""
    },
    {
        "verbs": "impersonate",
        "Resources": "groups,serviceaccounts,users",
        "API groups": ""
    },
    {
        "verbs": "watch,list,get",
        "Resources": "*",
        "API groups": "*"
    }
]
    [cluster role over-privileged permissions]: [
    {
        "verbs": "get",
        "Resources": "*",
        "API groups": "*"
    },
    {
        "verbs": "list",
        "Resources": "*",
        "API groups": "*"
    },
    {
        "verbs": "watch",
        "Resources": "*",
        "API groups": "*"
    }
]

    [rolePermissions] (default): [
    {
        "verbs": "create,update",
        "Resources": "configmaps",
        "API groups": "core"
    },
    {
        "verbs": "get",
        "Resources": "nodes",
        "API groups": "core"
    },
    {
        "verbs": "patch",
        "Resources": "deployments",
        "API groups": "apps"
    },
    {
        "verbs": "watch,list,get",
        "Resources": "configmaps,secrets",
        "API groups": "core"
    }
]
    [role over-privileged permissions]: [
    {
        "verbs": "list",
        "Resources": "secrets",
        "API groups": "core"
    },
    {
        "verbs": "watch",
        "Resources": "secrets",
        "API groups": "core"
    },
    {
        "verbs": "patch",
        "Resources": "deployments",
        "API groups": "apps"
    },
    {
        "verbs": "get",
        "Resources": "secrets",
        "API groups": "core"
    }
]

  [Role Details]:
    [clusterRoles]: [release-name-botkube-clusterrole] [Main configs]
    [clusterRoleBindings]: [ServiceAccount/release-name-botkube-sa] [Main configs]

    [roles]: [release-name-botkube-system] [Main configs]
    [roleBindings]: [ServiceAccount/release-name-botkube-sa] [Main configs]
-------------------------------------------

[Service Account]: nsm-delete-webhooks
  [Resource] (ResourceName/ResourceType): active/default

  [Permissions]:
    [clusterPermissions]: [
    {
        "verbs": "delete,list,get",
        "Resources": "mutatingwebhookconfigurations",
        "API groups": "admissionregistration.k8s.io"
    },
    {
        "verbs": "list,get",
        "Resources": "pods",
        "API groups": ""
    }
]
    [cluster role over-privileged permissions]: [] 

    [rolePermissions] (default): []
    [role over-privileged permissions]: [] 

  [Role Details]:
    [clusterRoles]: [nsm-delete-webhooks] [Main configs]
    [clusterRoleBindings]: [ServiceAccount/nsm-delete-webhooks] [Main configs]

    [roles]: [] []
    [roleBindings]: [] []
-------------------------------------------

[Service Account]: kubeslice-dns
  [Resource] (ResourceName/ResourceType): active/default

  [Permissions]:
    [clusterPermissions]: [
    {
        "verbs": "delete,get,create,watch,list,update,patch",
        "Resources": "serviceexports",
        "API groups": "networking.kubeslice.io"
    },
    {
        "verbs": "delete,get,create,watch,list,update,patch",
        "Resources": "serviceimports",
        "API groups": "networking.kubeslice.io"
    },
    {
        "verbs": "patch,update,get",
        "Resources": "serviceexports/status",
        "API groups": "networking.kubeslice.io"
    },
    {
        "verbs": "patch,update,get",
        "Resources": "serviceimports/status",
        "API groups": "networking.kubeslice.io"
    }
]
    [cluster role over-privileged permissions]: [] 

    [rolePermissions] (default): []
    [role over-privileged permissions]: [] 

  [Role Details]:
    [clusterRoles]: [kubeslice-dns-role] [Main configs]
    [clusterRoleBindings]: [ServiceAccount/kubeslice-dns] [Main configs]

    [roles]: [] []
    [roleBindings]: [] []
-------------------------------------------

[Service Account]: kubeslice-postdelete-job
  [Resource] (ResourceName/ResourceType): active/default

  [Permissions]:
    [clusterPermissions]: [
    {
        "verbs": "delete,get,create,watch,list,update,patch",
        "Resources": "spiffeids",
        "API groups": "spiffeid.spiffe.io"
    },
    {
        "verbs": "list,get",
        "Resources": "namespaces,pods",
        "API groups": ""
    },
    {
        "verbs": "patch,update,get",
        "Resources": "spiffeids/status",
        "API groups": "spiffeid.spiffe.io"
    }
]
    [cluster role over-privileged permissions]: [] 

    [rolePermissions] (default): []
    [role over-privileged permissions]: [] 

  [Role Details]:
    [clusterRoles]: [kubeslice-postdelete-job] [Main configs]
    [clusterRoleBindings]: [ServiceAccount/kubeslice-postdelete-job] [Main configs]

    [roles]: [] []
    [roleBindings]: [] []
-------------------------------------------

[Service Account]: spire-agent
  [Resource] (ResourceName/ResourceType): spire-agent/DaemonSet

  [Permissions]:
    [clusterPermissions]: [
    {
        "verbs": "get",
        "Resources": "nodes/proxy,pods,nodes",
        "API groups": ""
    }
]
    [cluster role over-privileged permissions]: [] 

    [rolePermissions] (default): []
    [role over-privileged permissions]: [] 

  [Role Details]:
    [clusterRoles]: [spire-agent-cluster-role] [Main configs]
    [clusterRoleBindings]: [ServiceAccount/spire-agent] [Main configs]

    [roles]: [] []
    [roleBindings]: [] []
-------------------------------------------

[Service Account]: kubeslice-kubernetes-dashboard
  [Resource] (ResourceName/ResourceType): active/default

  [Permissions]:
    [clusterPermissions]: [
    {
        "verbs": "watch,list,get",
        "Resources": "*",
        "API groups": "*"
    }
]
    [cluster role over-privileged permissions]: [
    {
        "verbs": "get",
        "Resources": "*",
        "API groups": "*"
    },
    {
        "verbs": "list",
        "Resources": "*",
        "API groups": "*"
    },
    {
        "verbs": "watch",
        "Resources": "*",
        "API groups": "*"
    }
]

    [rolePermissions] (default): []
    [role over-privileged permissions]: [] 

  [Role Details]:
    [clusterRoles]: [kubeslice-kubernetes-dashboard] [Main configs]
    [clusterRoleBindings]: [ServiceAccount/kubeslice-kubernetes-dashboard] [Main configs]

    [roles]: [] []
    [roleBindings]: [] []
-------------------------------------------

